<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
<!ENTITY % BOOK_ENTITIES SYSTEM "SIP_Presence_Service_User_Guide.ent">
<!-- NOTES ON CHANGING ENTITY FILES
Important: take care when changing entities for directories
* Linux path separators must be: "/"
* Windows path separators must be: "\"
* Entities which represent directories MUST HAVE a final path separator:
	my/path/  <- (final separator)
If this final separator is missing, then the documentation will be wrong. -->
<!-- Common entities: same across all books except for BOOKID -->
<!ENTITY PRODUCT "JBoss Communications Platform">
<!ENTITY BOOKID "SIP_Presence_Service_User_Guide">
<!ENTITY YEAR "2009">
<!ENTITY HOLDER "Red Hat Inc">
<!-- Shared: Configuring the JBOSS_HOME Environment Variable -->
<!ENTITY MOB_JBOSS_HOME_LIN "mobicents-all-1.2.0.GA-jboss-4.2.3.GA/jboss">
<!ENTITY JBCP_JBOSS_HOME_LIN "jboss-eap-4.3/jboss-as">
<!-- SIP Presence Service User Guide -->
<!ENTITY SPS_INT_VERSION "1.0.0 BETA4">
<!ENTITY SPS_INT_SIZE "90 MB">
<!ENTITY SPS_INT_ZIP "mobicents-sip-presence-integrated-1.0.0.BETA4-CP1.zip">
<!ENTITY SPS_INT_JBOSS_HOME_BIN_LIN "bin/">
<!ENTITY SPS_INT_JBOSS_HOME_BIN_WIN "bin\">
<!ENTITY SPS_XDMS_VERSION "1.0.0 BETA4 CP1">
<!ENTITY SPS_XDMS_SIZE "90 MB">
<!ENTITY SPS_XDMS_ZIP "mobicents-sip-presence-xdms-1.0.0.BETA4-CP1.zip">
<!ENTITY SPS_XDMS_JBOSS_HOME_BIN_LIN "bin/">
<!ENTITY SPS_XDMS_JBOSS_HOME_BIN_WIN "bin\">
]>
<book lang="en-US">
  <bookinfo id="spsug-SIP_Presence_Service_User_Guide" lang="en-US">
    <!--  chapter id nickname: spsug  -->

    <title>SIP Presence Service User Guide</title>

    <subtitle>The Guide to the SIP Presence and XML Document Management
    Servers</subtitle>

    <productname>JBoss Communications Platform</productname>

    <productnumber>1.2.0</productnumber>

    <edition>1.0</edition>

    <pubsnumber>1</pubsnumber>

    <abstract condition="mob">
      <para><application>The Mobicents Platform</application> is the first and
      only open source <acronym>VoIP</acronym> platform certified for
      <acronym>JAIN SLEE</acronym> 1.0 and <acronym>SIP</acronym> Servlets 1.1
      compliance. <application>Mobicents</application> serves as a
      high-performance core for Service Delivery Platforms
      (<acronym>SDP</acronym>s) and <acronym>IP</acronym> Multimedia
      Subsystems (<acronym>IMS</acronym>es) by leveraging
      <acronym>J2EE</acronym> to enable the convergence of data and video in
      Next-Generation Intelligent Network (<acronym>NGIN</acronym>)
      applications.</para>

      <para>The <application>Mobicents Platform</application> enables the
      composition of predefined Service Building Blocks
      (<acronym>SBB</acronym>s) such as Call-Control, Billing,
      User-Provisioning, Administration and Presence-Sensing. Out-of-the-box
      monitoring and management of <application>Mobicents</application>
      components is achieved through <acronym>JMX</acronym> Consoles.
      <acronym>JSLEE</acronym> allows popular protocol stacks such as
      <acronym>SIP</acronym> to be plugged in as Resource Adapters
      (<acronym>RA</acronym>s), and Service Building Blocks—which share many
      similarities with <acronym>EJB</acronym>s—allow the easy accommodation
      and integration of enterprise applications with end points such as the
      Web, Customer Relationship Management (<acronym>CRM</acronym>) systems
      and Service-Oriented Architectures (<acronym>SOA</acronym>s). The
      <application>Mobicents Platform</application> is the natural choice for
      telecom Operations Support Systems (OSSes) and Network Management
      Systems (NMSes).</para>

      <para>In addition to telecom, <application>Mobicents</application> is
      suitable for a variety of problem domains demanding an Event-Driven
      Architecture (<acronym>EDA</acronym>) for high-volume, low-latency
      signaling, such as financial trading, online gaming,
      (<acronym>RFID</acronym>) sensor network integration, and distributed
      control.</para>
    </abstract>

    <corpauthor><inlinemediaobject>
        <imageobject>
          <imagedata fileref="Common_Content/images/title_logo.svg"
                     format="SVG" />
        </imageobject>

        <textobject>
          <phrase>Logo</phrase>
        </textobject>
      </inlinemediaobject></corpauthor>

    <copyright>
      <year>&YEAR;</year>

      <holder>&HOLDER;</holder>
    </copyright>

    <!-- ORIGINAL:
	<xi:include
		href="Common_Content/Legal_Notice.xml"
		xmlns:xi="http://www.w3.org/2001/XInclude" /> -->

    <!-- FOR JDOCBOOK: -->

    <!-- <xi:include
		xmlns:xi="http://www.w3.org/2001/XInclude"
		href="Common_Content/Legal_Notice.xml">
		<xi:fallback
			xmlns:xi="http://www.w3.org/2001/XInclude">
			<xi:include
				href="fallback_content/Legal_Notice.xml"
				xmlns:xi="http://www.w3.org/2001/XInclude"></xi:include>
		</xi:fallback>
	</xi:include> -->

    <authorgroup id="sps-Author_Group" lang="en-US">
      <author>
        <firstname>Douglas</firstname>

        <surname>Silas</surname>

        <affiliation>
          <orgname>Red Hat Engineering</orgname>

          <orgdiv>Content Services</orgdiv>
        </affiliation>

        <email condition="mobicents">dhensley@redhat.com</email>
      </author>

      <author>
        <firstname>Ivelin</firstname>

        <surname>Ivanov</surname>

        <affiliation>
          <orgname>Red Hat,</orgname>

          <orgdiv condition="mob">Mobicents</orgdiv>
        </affiliation>

        <email condition="mob">ivelin.atanasoff.ivanov@gmail.com</email>
      </author>

      <author>
        <firstname>Vladimir</firstname>

        <surname>Ralev</surname>

        <affiliation>
          <orgname>Red Hat,</orgname>

          <orgdiv condition="mob">Mobicents</orgdiv>
        </affiliation>

        <email condition="mob">vladimir.ralev@gmail.com</email>
      </author>

      <author>
        <firstname>Eduardo</firstname>

        <surname>Martins</surname>

        <affiliation>
          <orgname>Red Hat,</orgname>

          <orgdiv condition="mob">Mobicents</orgdiv>
        </affiliation>

        <email condition="mob">emmartins@gmail.com</email>
      </author>

      <author>
        <firstname>Jean</firstname>

        <surname>Deruelle</surname>

        <affiliation>
          <orgname>Red Hat,</orgname>

          <orgdiv condition="mob">Mobicents</orgdiv>
        </affiliation>

        <email condition="mob">jean.deruelle@gmail.com</email>
      </author>

      <author>
        <firstname>Oleg</firstname>

        <surname>Kulikov</surname>

        <affiliation>
          <orgname>Red Hat,</orgname>

          <orgdiv condition="mob">Mobicents</orgdiv>
        </affiliation>

        <email condition="mob">oleg.kulikoff@gmail.com</email>
      </author>

      <author>
        <firstname>Amit</firstname>

        <surname>Bhayani</surname>

        <affiliation>
          <orgname>Red Hat,</orgname>

          <orgdiv condition="mob">Mobicents</orgdiv>
        </affiliation>

        <email condition="mob">amit.bhayani@gmail.com</email>
      </author>

      <author>
        <firstname>Luis</firstname>

        <surname>Barreiro</surname>

        <affiliation>
          <orgname>Red Hat,</orgname>

          <orgdiv condition="mob">Mobicents</orgdiv>
        </affiliation>

        <email condition="mob">lbbbarreiro@gmail.com</email>
      </author>

      <author>
        <firstname>Alexandre</firstname>

        <surname>Mendonça</surname>

        <affiliation>
          <orgname>Red Hat,</orgname>

          <orgdiv condition="mob">Mobicents</orgdiv>
        </affiliation>

        <email condition="mob">brainslog@gmail.com</email>
      </author>

      <author>
        <firstname>Bartosz</firstname>

        <surname>Baranowski</surname>

        <affiliation>
          <orgname>Red Hat,</orgname>

          <orgdiv condition="mob">Mobicents</orgdiv>
        </affiliation>

        <email condition="mob">baranowb@gmail.com</email>
      </author>

      <author>
        <firstname>Pavel</firstname>

        <surname>Šlégr</surname>

        <affiliation>
          <orgname>Red Hat,</orgname>

          <orgdiv condition="mob">Mobicents</orgdiv>
        </affiliation>

        <email condition="mob">pavel.slegr@gmail.com</email>
      </author>
    </authorgroup>
  </bookinfo>

  <preface id="spsug-SIP_Presence_Service_User_Guide-Preface" lang="en-US">
    <!--  chapter id nickname: spsug  -->

    <title>Preface</title>

    <!--  ORIGINAL:
	<xi:include
		href="Common_Content/Conventions.xml"
		xmlns:xi="http://www.w3.org/2001/XInclude" /> -->

    <!-- FOR JDOCBOOK: -->

    <section lang="en-US" xml:base="Common_Content/Conventions.xml">
      <title>Document Conventions</title>

      <para>This manual uses several conventions to highlight certain words
      and phrases and draw attention to specific pieces of information.</para>

      <para>In PDF and paper editions, this manual uses typefaces drawn from
      the <ulink url="https://fedorahosted.org/liberation-fonts/">Liberation
      Fonts</ulink> set. The Liberation Fonts set is also used in HTML
      editions if the set is installed on your system. If not, alternative but
      equivalent typefaces are displayed. Note: Red Hat Enterprise Linux 5 and
      later includes the Liberation Fonts set by default.</para>

      <section>
        <title>Typographic Conventions</title>

        <para>Four typographic conventions are used to call attention to
        specific words and phrases. These conventions, and the circumstances
        they apply to, are as follows.</para>

        <para><literal>Mono-spaced Bold</literal></para>

        <para>Used to highlight system input, including shell commands, file
        names and paths. Also used to highlight key caps and key-combinations.
        For example:</para>

        <blockquote>
          <para>To see the contents of the file
          <filename>my_next_bestselling_novel</filename> in your current
          working directory, enter the <command>cat
          my_next_bestselling_novel</command> command at the shell prompt and
          press <keycap>Enter</keycap> to execute the command.</para>
        </blockquote>

        <para>The above includes a file name, a shell command and a key cap,
        all presented in Mono-spaced Bold and all distinguishable thanks to
        context.</para>

        <para>Key-combinations can be distinguished from key caps by the
        hyphen connecting each part of a key-combination. For example:</para>

        <blockquote>
          <para>Press <keycap>Enter</keycap> to execute the command.</para>

          <para>Press <keycombo>
              <keycap>Ctrl</keycap>

              <keycap>Alt</keycap>

              <keycap>F1</keycap>
            </keycombo> to switch to the first virtual terminal. Press
          <keycombo>
              <keycap>Ctrl</keycap>

              <keycap>Alt</keycap>

              <keycap>F7</keycap>
            </keycombo> to return to your X-Windows session.</para>
        </blockquote>

        <para>The first sentence highlights the particular key cap to press.
        The second highlights two sets of three key caps, each set pressed
        simultaneously.</para>

        <para>If source code is discussed, class names, methods, functions,
        variable names and returned values mentioned within a paragraph will
        be presented as above, in <literal>Mono-spaced Bold</literal>. For
        example:</para>

        <blockquote>
          <para>File-related classes include <classname>filesystem</classname>
          for file systems, <classname>file</classname> for files, and
          <classname>dir</classname> for directories. Each class has its own
          associated set of permissions.</para>
        </blockquote>

        <para><application>Proportional Bold</application></para>

        <para>This denotes words or phrases encountered on a system, including
        application names; dialogue box text; labelled buttons; check-box and
        radio button labels; menu titles and sub-menu titles. For
        example:</para>

        <blockquote>
          <para>Choose <guimenu>System &gt; Preferences &gt; Mouse</guimenu>
          from the main menu bar to launch <application>Mouse
          Preferences</application>. In the <guilabel>Buttons</guilabel> tab,
          click the <guilabel>Left-handed mouse</guilabel> check box and click
          <guibutton>Close</guibutton> to switch the primary mouse button from
          the left to the right (making the mouse suitable for use in the left
          hand).</para>

          <para>To insert a special character into a
          <application>gedit</application> file, choose <guimenu>Applications
          &gt; Accessories &gt; Character Map</guimenu> from the main menu
          bar. Next, choose <guimenu>Search &gt; Find…</guimenu> from the
          <application>Character Map</application> menu bar, type the name of
          the character in the <guilabel>Search</guilabel> field and click
          <guibutton>Next</guibutton>. The character you sought will be
          highlighted in the <guilabel>Character Table</guilabel>.
          Double-click this highlighted character to place it in the
          <guilabel>Text to copy</guilabel> field and then click the
          <guibutton>Copy</guibutton> button. Now switch back to your document
          and choose <guimenu>Edit &gt; Paste</guimenu> from the
          <application>gedit</application> menu bar.</para>
        </blockquote>

        <para>The above text includes application names; system-wide menu
        names and items; application-specific menu names; and buttons and text
        found within a GUI interface, all presented in Proportional Bold and
        all distinguishable by context.</para>

        <para>Note the <guimenu>&gt;</guimenu> shorthand used to indicate
        traversal through a menu and its sub-menus. This is to avoid the
        difficult-to-follow 'Select <guimenuitem>Mouse</guimenuitem> from the
        <guimenu>Preferences</guimenu> sub-menu in the
        <guimenu>System</guimenu> menu of the main menu bar' approach.</para>

        <para><command><replaceable>Mono-spaced Bold
        Italic</replaceable></command> or
        <application><replaceable>Proportional Bold
        Italic</replaceable></application></para>

        <para>Whether Mono-spaced Bold or Proportional Bold, the addition of
        Italics indicates replaceable or variable text. Italics denotes text
        you do not input literally or displayed text that changes depending on
        circumstance. For example:</para>

        <blockquote>
          <para>To connect to a remote machine using ssh, type <command>ssh
          <replaceable>username</replaceable>@<replaceable>domain.name</replaceable></command>
          at a shell prompt. If the remote machine is
          <filename>example.com</filename> and your username on that machine
          is john, type <command>ssh john@example.com</command>.</para>

          <para>The <command>mount -o remount
          <replaceable>file-system</replaceable></command> command remounts
          the named file system. For example, to remount the
          <filename>/home</filename> file system, the command is
          <command>mount -o remount /home</command>.</para>

          <para>To see the version of a currently installed package, use the
          <command>rpm -q <replaceable>package</replaceable></command>
          command. It will return a result as follows:
          <command><replaceable>package-version-release</replaceable></command>.</para>
        </blockquote>

        <para>Note the words in bold italics above — username, domain.name,
        file-system, package, version and release. Each word is a placeholder,
        either for text you enter when issuing a command or for text displayed
        by the system.</para>

        <para>Aside from standard usage for presenting the title of a work,
        italics denotes the first use of a new and important term. For
        example:</para>

        <blockquote>
          <para>When the Apache HTTP Server accepts requests, it dispatches
          child processes or threads to handle them. This group of child
          processes or threads is known as a
          <firstterm>server-pool</firstterm>. Under Apache HTTP Server 2.0,
          the responsibility for creating and maintaining these server-pools
          has been abstracted to a group of modules called
          <firstterm>Multi-Processing Modules</firstterm>
          (<firstterm>MPMs</firstterm>). Unlike other modules, only one module
          from the MPM group can be loaded by the Apache HTTP Server.</para>
        </blockquote>
      </section>

      <section>
        <title>Pull-quote Conventions</title>

        <para>Two, commonly multi-line, data types are set off visually from
        the surrounding text.</para>

        <para>Output sent to a terminal is set in <computeroutput>Mono-spaced
        Roman</computeroutput> and presented thus:</para>

        <screen>
books        Desktop   documentation  drafts  mss    photos   stuff  svn
books_tests  Desktop1  downloads      images  notes  scripts  svgs
</screen>

        <para>Source-code listings are also set in <computeroutput>Mono-spaced
        Roman</computeroutput> but are presented and highlighted as
        follows:</para>

        <programlisting language="java">
package org.jboss.book.jca.ex1;

import javax.naming.InitialContext;

public class ExClient
{
   public static void main(String args[]) 
       throws Exception
   {
      InitialContext iniCtx = new InitialContext();
      Object         ref    = iniCtx.lookup("EchoBean");
      EchoHome       home   = (EchoHome) ref;
      Echo           echo   = home.create();

      System.out.println("Created Echo");

      System.out.println("Echo.echo('Hello') = " + echo.echo("Hello"));
   }
   
}
</programlisting>
      </section>

      <section>
        <title>Notes and Warnings</title>

        <para>Finally, we use three visual styles to draw attention to
        information that might otherwise be overlooked.</para>

        <note>
          <title>Note</title>

          <para>A note is a tip or shortcut or alternative approach to the
          task at hand. Ignoring a note should have no negative consequences,
          but you might miss out on a trick that makes your life
          easier.</para>
        </note>

        <important>
          <title>Important</title>

          <para>Important boxes detail things that are easily missed:
          configuration changes that only apply to the current session, or
          services that need restarting before an update will apply. Ignoring
          Important boxes won't cause data loss but may cause irritation and
          frustration.</para>
        </important>

        <warning>
          <title>Warning</title>

          <para>A Warning should not be ignored. Ignoring warnings will most
          likely cause data loss.</para>
        </warning>
      </section>
    </section>

    <section xml:base="Common_Content/Feedback.xml">
      <title>We Need Feedback!</title>

      <indexterm>
        <primary>feedback</primary>

        <secondary>contact information for this manual</secondary>
      </indexterm>

      <para>If you find a typographical error in this manual, or if you have
      thought of a way to make this manual better, we would love to hear from
      you! Please submit a report in Bugzilla: <ulink
      url="http://bugzilla.redhat.com/bugzilla/">http://bugzilla.redhat.com/bugzilla/</ulink>
      against the product <application>&PRODUCT;.</application></para>

      <para>When submitting a bug report, be sure to mention the manual's
      identifier: <citetitle>&BOOKID;</citetitle></para>

      <para>If you have a suggestion for improving the documentation, try to
      be as specific as possible when describing it. If you have found an
      error, please include the section number and some of the surrounding
      text so we can find it easily.</para>
    </section>
  </preface>

  <chapter id="ittsps-Introduction_to_the_SIP_Presence_Service" lang="en-US">
    <!--  chapter id nickname: ittsps  -->

    <title>Introduction to the Mobicents SIP Presence Service</title>

    <para>The <application condition="mob">Mobicents</application>
    <application>SIP Presence Service</application> provides presence
    functionalities to SIP-based networks using standards developed by the
    Internet Engineering Task Force (IETF), the Open Mobile Alliance (OMA),
    the 3rd Generation Partnership Project (3GPP) and the European
    Telecommunications Standards Institute (ETSI).</para>

    <para><mediaobject
			id="ittsps-sps-SIPPresService-img-mobicents_sps_standards">
			<imageobject>
				<imagedata
					align="center"
					fileref="images/mobicents_sps_standards.jpg"
					format="JPG" />
			</imageobject>
			<caption>
				<para>Mobicents SIP Presence Service relation with standard groups</para>
			</caption>
		</mediaobject></para>

    <section id="ittsps-Architecture_of_the_SIP_Presence_Service">
      <title>Architecture of the Mobicents SIP Presence Service</title>

      <para>The <application>SIP Presence Service</application> is comprised
      of three separate but interrelated servers.</para>

      <para>View the <ulink
      url="http://mobicents-public.googlegroups.com/web/MobicentsSipPresenceServerArchitecture.jpg?gda=hTO2O1wAAAAF_VX0TG5xx-FBSRUj3rSwIO4FCNj8IiPb7zdEEjjYwlAgDLzQ8i_XkNckzGVsS4tcrsHvKlAHZlMtp5btUQdlZU3ceRGzPAq0DrjjiW76mv1ab5qObNWgAVSUTtz98C0"><application
      condition="mob">Mobicents Platform</application> SIP Presence Service
      architecture</ulink></para>

      <!-- <mediaobject
			id="ittsps-sps-SIPPresService-dia-SIPPresServiceArchitecture">
			<imageobject>
				<imagedata
					align="center"
					fileref="images/sps-SIPPresService-dia-SIPPresServiceArchitecture.jpg"
					format="JPG" />
			</imageobject>
			<caption>
				<para>Functional Diagram of the Mobicents SIP Presence Service</para>
			</caption>
		</mediaobject> -->

      <variablelist id="ittsps-The_Three_Servers_Comprising_the_SIP_Presence_Service">
        <title>The Three Servers Comprising the SIP Presence Service</title>

        <varlistentry>
          <term>The SIP Presence Server</term>

          <listitem>
            <para>The <application condition="mob">Mobicents</application> SIP
            Presence Server is an entity that accepts, stores and distributes
            Presence Information. The <application>SIP Presence
            Server</application> performs the following functions:</para>

            <itemizedlist>
              <listitem>
                <para>It manages publications from one or multiple presence
                source(s) of a certain <emphasis>presentity</emphasis>. This
                includes refreshing presence information, replacing existing
                presence information with newly-published information, or
                removing presence information.</para>
              </listitem>

              <listitem>
                <para>It manages subscriptions from watchers to presence
                information and generates notifications about presence
                information state changes, retrieving the presence
                authorization rules from the <application>XDM
                Server</application>.</para>
              </listitem>

              <listitem>
                <para>It manages subscriptions from watcher information
                subscribers to watcher information and generates notifications
                about watcher information state changes.</para>
              </listitem>
            </itemizedlist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>The XML Document Management Server</term>

          <listitem>
            <para>The <application>XML Document Management
            Server</application> (<acronym>XDM Server</acronym>) is a
            functional element of next-generation IP communications networks
            is responsible for handling the management of user XML documents
            stored on the network side, such as presence authorization rules,
            static presence information, contact and group lists (also known
            as <quote>resource lists</quote>), policy data, and many
            others.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>The Resource List Server</term>

          <listitem>
            <para>The <application>Resource List Server</application>
            (<acronym>RLS</acronym>) handles subscriptions to presence lists.
            It creates and manages back-end subscriptions to all resources in
            the presence list. The list content is retrieved from the
            <application>XDM Server</application>.</para>
          </listitem>
        </varlistentry>
      </variablelist>

      <para>A major advantage of the SIP Presence Service is that, depending
      on your needs, each server can be deployed separately, or all servers
      can be integrated on the same host. In addition, there are JAIN SLEE
      internal client interfaces available for each server, which
      distinguishes the <application condition="mob">Mobicents</application>
      SIP Presence Service from other presence services.</para>

      <para>For documentation on each server proceed to links under this page
      Resources section.</para>

      <formalpara>
        <title>Resources and Further Information about the Mobicents Presence
        Service</title>

        <para>For further information on the Mobicents Presence Service, here
        is a list of additional resources:</para>
      </formalpara>

      <variablelist>
        <varlistentry>
          <term>Issue tracker</term>

          <listitem>
            <para><ulink
            url="http://mobicents.googlecode.com/svn/trunk/servers/sip-presence/">Source
            Code Location</ulink></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Forums</term>

          <listitem>
            <para><ulink
            url="http://forums.java.net/jive/category.jspa?categoryID=36">Java.net
            Forums</ulink></para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>
  </chapter>

  <chapter id="itsps-Installing_the_SIP_Presence_Service" lang="en-US">
    <!--  chapter id nickname: itsps  -->

    <title>Installing the SIP Presence Service</title>

    <section id="itsps-binary-SIP_Presence_Service-Installing_Configuring_and_Running">
      <title>Mobicents SIP Presence Service: Installing, Configuring and
      Running</title>

      <para>There are multiple distributions of the <application>Mobicents SIP
      Presence Service</application>.</para>

      <variablelist id="itsps-Description_of_the_Different_SIP_Presence_Service_Distributions">
        <title>Description of the Different SIP Presence Service
        Distributions</title>

        <varlistentry>
          <term>The zipped-up source distribution</term>

          <listitem>
            <para>This distribution is source only, and its installation is
            not covered in this guide. Be careful you don't accidentally
            download this distribution when wanting one of the binary
            distributions (this one has <filename>.src</filename> in its file
            name).</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>The all-included integrated <application>SIP Presence
          Service</application> binary distribution <emphasis>with
          JBoss</emphasis></term>

          <listitem>
            <para>These installation instructions detail the installation,
            running and configuring of the all-included
            <emphasis>integrated</emphasis> binary <application>SIP Presence
            Service</application> distribution. In addition to the
            <application>XML Document</application> and <application>SIP
            Presence Servers</application>, this distribution bundles the
            <application>JBoss Application Server</application>, the latest
            version of the <application>Mobicents JAIN SLEE
            Server</application>, and the SIP and HTTP Servlet resource
            adapters.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>The integrated <application>SIP Presence Service</application>
          binary distribution <emphasis>without</emphasis> JBoss</term>

          <listitem>
            <para>Users who have already installed and set up a separate
            <application>Mobicents JAIN SLEE Server</application> installation
            may want to install this the integrated distribution without
            JBoss. If you install this distribution, keep in mind that the
            <envar>JBOSS_HOME</envar> environment variable
            <emphasis>must</emphasis> be set to the correct location.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>The <application>XML Document Management</application> Server
          binary distribution with <application>JBoss</application></term>

          <listitem>
            <para>Users who wish to deploy the <application>XML Document
            Server</application> on a different host or who do not require the
            <application>SIP Presence Server</application> should install the
            standalone <application>XDM Server</application> binary
            distribution. The following installation, running and configuring
            instructions provide parallel instructions specific to the
            <application>XDM Server</application>.</para>
          </listitem>
        </varlistentry>
      </variablelist>

      <bridgehead id="itsps-Installing_the_Java_Development_Kit">Installing
      the Java Development Kit</bridgehead>

      <section lang="en-US">
        <!--  chapter id nickname: jdkicar  -->

        <title>Java Development Kit: Installing, Configuring and
        Running</title>

        <para>The <application>Mobicents Platform</application> is written in
        Java; therefore, before running any
        <application>Mobicents</application> server, you must have a working
        Java Runtime Environment (<acronym>JRE</acronym>) or Java Development
        Kit (<acronym>JDK</acronym>) installed on your system. In addition,
        the JRE or JDK you are using to run
        <application>Mobicents</application> must be version 5 or
        higher<footnote>
            <para>At this point in time, it is possible to run most
            <application>Mobicents</application> servers, such as the JAIN
            SLEE Server, using a Java 6 JRE or JDK. Be aware, however, that
            presently the XML Document Management Server does not run on Java
            6. We suggest checking the Mobicents web site, forums or
            discussion pages if you need to inquire about the status of
            running the XML Document Management Server with Java 6.</para>
          </footnote>.</para>

        <formalpara>
          <title>Should I Install the JRE or JDK?</title>

          <para>Although you can run <application>Mobicents</application>
          servers using the Java Runtime Environment, we assume that most
          users are developers interested in developing Java-based,
          <application>Mobicents</application>-driven solutions. Therefore, in
          this guide we take the tact of showing how to install the full Java
          Development Kit.</para>
        </formalpara>

        <formalpara>
          <title>Should I Install the 32-Bit or the 64-Bit JDK, and Does It
          Matter?</title>

          <para>Briefly stated: if you are running on a 64-Bit Linux or
          Windows platform, you should consider installing and running the
          64-bit JDK over the 32-bit one. Here are some heuristics for
          determining whether you would rather run the 64-bit Java Virtual
          Machine (JVM) over its 32-bit cousin for your application:</para>
        </formalpara>

        <itemizedlist>
          <listitem>
            <para>Wider datapath: the pipe between RAM and CPU is doubled,
            which improves the performance of memory-bound applications when
            using a 64-bit JVM.</para>
          </listitem>

          <listitem>
            <para>64-bit memory addressing gives virtually unlimited (1
            exabyte) heap allocation. However large heaps affect garbage
            collection.</para>
          </listitem>

          <listitem>
            <para>Applications that run with more than 1.5 GB of RAM
            (including free space for garbage collection optimization) should
            utilize the 64-bit JVM.</para>
          </listitem>

          <listitem>
            <para>Applications that run on a 32-bit JVM and do not require
            more than minimal heap sizes will gain nothing from a 64-bit JVM.
            Barring memory issues, 64-bit hardware with the same relative
            clock speed and architecture is not likely to run Java
            applications faster than their 32-bit cousin.</para>
          </listitem>
        </itemizedlist>

        <para>Note that the following instructions detail how to download and
        install the 32-bit JDK, although the steps are nearly identical for
        installing the 64-bit version.</para>

        <!--  <formalpara
			id="jdkicar-binary-Java_Development_Kit-Pre-Install Requirements and Prerequisites">
			<title>Pre-Install Requirements and Prerequisites</title>
			<para></para>
		</formalpara>  -->

        <!--   <variablelist
			condition="jdkicar-binary-Java_Development_Kit-Hardware_Requirements">
			<title>Hardware Requirements</title>
			<varlistentry>
				<term>Sufficient Disk Space</term>
				<listitem>
					<para></para>
				</listitem>
			</varlistentry>
		</variablelist>   -->

        <!--   <variablelist
			condition="jdkicar-binary-Java_Development_Kit-Software_Prerequisites">
			<title>Software Prerequisites</title>
			<varlistentry>
				<term></term>
				<listitem>
					<para></para>
				</listitem>
			</varlistentry>
		</variablelist>   -->

        <formalpara>
          <!--  id="jdkicar-binary-Java_Development_Kit-Downloading">  -->

          <title>Downloading</title>

          <para>You can download the Sun JDK 5.0 (Java 2 Development Kit) from
          Sun's website: <ulink
          url="http://java.sun.com/javase/downloads/index_jdk5.jsp"></ulink>.
          Click on the <guilabel>Download</guilabel> link next to "JDK 5.0
          Update <replaceable>&lt;x&gt;</replaceable>" (where
          <replaceable>&lt;x&gt;</replaceable> is the latest minor version
          release number). On the next page, select your language and platform
          (both architecture—whether 32- or 64-bit—and operating system), read
          and agree to the <literal>Java Development Kit 5.0 License
          Agreement</literal>, and proceed to the download page.</para>
        </formalpara>

        <para>The Sun website will present two download alternatives to you:
        one is an RPM inside a self-extracting file (for example,
        <filename>jdk-1_5_0_16-linux-i586-rpm.bin</filename>), and the other
        is merely a self-extracting file (e.g.
        <filename>jdk-1_5_0_16-linux-i586.bin</filename>). If you are
        installing the JDK on Red Hat Enterprise Linux, Fedora, or another
        RPM-based Linux system, we suggest that you download the
        self-extracting file containing the RPM package, which will set up and
        use the SysV service scripts in addition to installing the JDK. We
        also suggest installing the self-extracting RPM file if you will be
        running <application>Mobicents</application> in a production
        environment.</para>

        <formalpara>
          <!--  id="jdkicar-binary-Java_Development_Kit-Installing">  -->

          <title>Installing</title>

          <para>The following procedures detail how to install the Java
          Development Kit on both Linux and Windows.</para>
        </formalpara>

        <procedure>
          <title>Installing the JDK on Linux</title>

          <step>
            <para>Regardless of which file you downloaded, you can install it
            on Linux by simply making sure the file is executable and then
            running it:</para>

            <!--   ~]$ chmod +x "jdk-1_5_0_<minor_version>-linux-<architecture>-rpm.bin"
~]$ ./"jdk-1_5_0_<minor_version>-linux-<architecture>-rpm.bin"   -->

            <screen>~]$ chmod +x "jdk-1_5_0_&lt;minor_version&gt;-linux-&lt;architecture&gt;-rpm.bin"
~]$ ./"jdk-1_5_0_&lt;minor_version&gt;-linux-&lt;architecture&gt;-rpm.bin"
</screen>
          </step>
        </procedure>

        <note>
          <title>You Installed Using the Non-RPM Installer, but Want the SysV
          Service Scripts</title>

          <para>If you download the non-RPM self-extracting file (and
          installed it), and you are running on an RPM-based system, you can
          still set up the SysV service scripts by downloading and installing
          one of the <literal>-compat</literal> packages from the JPackage
          project. Remember to download the <literal>-compat</literal> package
          which corresponds correctly to the minor release number of the JDK
          you installed. The compat packages are available from <ulink
          url="ftp://jpackage.hmdc.harvard.edu/JPackage/1.7/generic/RPMS.non-free/"></ulink>.</para>
        </note>

        <important>
          <para>You do not need to install a <literal>-compat</literal>
          package in addition to the JDK if you installed the self-extracting
          RPM file! The <literal>-compat</literal> package merely performs the
          same SysV service script set up that the RPM version of the JDK
          installer does.</para>
        </important>

        <procedure>
          <title>Installing the JDK on Windows</title>

          <step>
            <para>Using Explorer, simply double-click the downloaded
            self-extracting installer and follow the instructions to install
            the JDK.</para>
          </step>
        </procedure>

        <formalpara>
          <!--  id="jdkicar-binary-Java_Development_Kit-Configuring">  -->

          <title>Configuring</title>

          <para>Configuring your system for the JDK consists in two tasks:
          setting the <envar>JAVA_HOME</envar> environment variable, and
          ensuring that the system is using the proper JDK (or JRE) using the
          <command>alternatives</command> command. Setting
          <envar>JAVA_HOME</envar> usually overrides the values for
          <command>java</command>, <command>javac</command> and
          <command>java_sdk_1.5.0</command> in
          <command>alternatives</command>, but we will set them all just to be
          safe and consistent.</para>
        </formalpara>

        <variablelist>
          <varlistentry>
            <term>Setting the <envar>JAVA_HOME</envar> Environment Variable on
            Generic Linux</term>

            <listitem>
              <para>After installing the JDK, you must ensure that the
              <envar>JAVA_HOME</envar> environment variable exists and points
              to the location of your JDK installation.</para>

              <formalpara>
                <title>Setting the <envar>JAVA_HOME</envar> Environment
                Variable on Linux</title>

                <para>You can determine whether <envar>JAVA_HOME</envar> is
                set on your system by <command>echo</command>ing it on the
                command line:</para>
              </formalpara>

              <!--   ~]$ echo $JAVA_HOME   -->

              <screen>~]$ echo $JAVA_HOME
</screen>

              <para>If <envar>JAVA_HOME</envar> is not set already, then you
              must set its value to the location of the JDK installation on
              your system. You can do this by adding two lines to your
              personal <filename>~/.bashrc</filename> configuration file. Open
              <filename>~/.bashrc</filename> (or create it if it doesn't
              exist) and add a line similar to the following one anywhere
              inside the file:</para>

              <programlisting>export JAVA_HOME="/usr/lib/jvm/jdk1.5.0_&lt;version&gt;"
</programlisting>

              <para>You should also set this environment variable for any
              other users who will be running
              <application>Mobicents</application> (any environment variables
              <command>export</command>ed from <filename>~/.bashrc</filename>
              files are local to that user).</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>Setting <envar>java</envar>, <envar>javac</envar> and
            <envar>java_sdk_1.5.0</envar> Using the
            <command>alternatives</command> command</term>

            <listitem>
              <formalpara>
                <title>Selecting the Correct System JVM on Linux using
                <command>alternatives</command></title>

                <para>On systems with the <command>alternatives</command>
                command, including Red Hat Enterprise Linux and Fedora, you
                can easily choose which JDK (or JRE) installation you wish to
                use, as well as which <command>java</command> and
                <command>javac</command> executables should be run when
                called.</para>
              </formalpara>

              <para><emphasis>As the root user</emphasis>, call
              <command>/usr/sbin/alternatives</command> with the
              <option>--config java</option> option to select between JDKs and
              JREs installed on your system:</para>

              <programlisting>root@localhost ~]$ /usr/sbin/alternatives --config java

There are 3 programs which provide 'java'.

  Selection    Command
-----------------------------------------------
   1           /usr/lib/jvm/jre-1.5.0-gcj/bin/java
   2           /usr/lib/jvm/jre-1.6.0-sun/bin/java
*+ 3         /usr/lib/jvm/jre-1.5.0-sun/bin/java


Enter to keep the current selection[+], or type selection number:
</programlisting>

              <para>In our case, we want to use the Sun JDK, version 5, that
              we downloaded and installed, to run the <command>java</command>
              executable. In the <command>alternatives</command> information
              printout above, a plus (<literal>+</literal>) next to a number
              indicates the one currently being used. As per
              <command>alternatives</command>' instructions, pressing
              <keycap>Enter</keycap> will simply keep the current JVM, or you
              can enter the number corresponding to the JVM you would prefer
              to use.</para>

              <para>Repeat the procedure above for the
              <command>javac</command> command and the
              <literal>java_sdk_1.5.0</literal> environment variable,
              <emphasis>as the root user</emphasis>:</para>

              <screen>~]$ /usr/sbin/alternatives --config javac
</screen>

              <screen>~]$ /usr/sbin/alternatives --config java_sdk_1.5.0
</screen>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>Setting the <envar>JAVA_HOME</envar> Environment Variable on
            Windows</term>

            <listitem>
              <para>For information on how to set environment variables in
              Windows, refer to <ulink
              url="http://support.microsoft.com/kb/931715"></ulink>.</para>
            </listitem>
          </varlistentry>
        </variablelist>

        <formalpara>
          <!--  id="jdkicar-binary-Java_Development_Kit-Testing">  -->

          <title>Testing</title>

          <para>Finally, to make sure that you are using the correct JDK or
          Java version (5 or higher), and that the java executable is in your
          <envar>PATH</envar>, run the <command>java
          <option>-version</option></command> command in the terminal from
          your home directory:</para>
        </formalpara>

        <screen>~]$ java -version
java version "1.5.0_16"
Java(TM) 2 Runtime Environment, Standard Edition (build 1.5.0_16-b03)
Java HotSpot(TM) Client VM (build 1.5.0_16-b03, mixed mode, sharing)
</screen>

        <!--  <formalpara
		id="jdkicar-binary-Java_Development_Kit-Running">
		<title>Running</title>
		<para></para>
	</formalpara>  -->

        <!--   <formalpara
		id="jdkicar-binary-Java_Development_Kit-Stopping">
		<title>Stopping</title>
		<para></para>
	</formalpara>   -->

        <formalpara>
          <!--  id="jdkicar-binary-Java_Development_Kit-Uninstalling">  -->

          <title>Uninstalling</title>

          <para>There is usually no reason (other than space concerns) to
          remove a particular JDK from your system, given that you can switch
          between JDKs and JREs easily using <command>alternatives</command>,
          and/or by setting <envar>JAVA_HOME</envar>.</para>
        </formalpara>

        <formalpara>
          <title>Uninstalling the JDK on Linux</title>

          <para>On RPM-based systems, you can uninstall the JDK using the
          <command>yum <option>remove &lt;jdk_rpm_name&gt;</option></command>
          command.</para>
        </formalpara>

        <formalpara>
          <title>Uninstalling the JDK on Windows</title>

          <para>On Windows systems, check the JDK entry in the
          <literal>Start</literal> menu for an uninstall command, or use
          <literal>Add/Remove Programs</literal>.</para>
        </formalpara>
      </section>

      <section id="itsps-binary-SIP_Presence_Service-PreInstall_Requirements_and_Prerequisites">
        <title>Pre-Install Requirements and Prerequisites</title>

        <para>You should ensure that a few requirements have been met before
        continuing with the install.</para>

        <variablelist id="itsps-binary-SIP_Presence_Service-Hardware_Requirements">
          <title>Hardware Requirements</title>

          <varlistentry>
            <term>Sufficient Disk Space</term>

            <listitem>
              <para>You must have sufficient disk space in order to install
              the integrated <application>SIP Presence Service</application>
              binary release. Once unzipped, version &SPS_INT_VERSION; of the
              integrated <application>SIP Presence Service</application>
              binary release requires <emphasis>at least</emphasis>
              &SPS_INT_SIZE; of free disk space. Version &SPS_XDMS_VERSION; of
              the <application>XDM Server</application> binary release
              requires <emphasis>at least</emphasis> &SPS_XDMS_SIZE; of disk
              space. Keep in mind that disk space requirements may change from
              release to release.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>Anything Java Itself Will Run On</term>

            <listitem>
              <para>The Mobicents <application>SIP Presence
              Service</application> and its bundled servers,
              <application>JBoss</application> and <application>JAIN
              SLEE</application>, are all 100% Java. <application>SIP Presence
              Service</application> will run on the same hardware that the
              <application>JBoss Application Server</application> runs
              on.</para>
            </listitem>
          </varlistentry>
        </variablelist>

        <variablelist id="itsps-binary-SIP_Presence_Service-Software_Prerequisites">
          <title>Software Prerequisites</title>

          <varlistentry>
            <term>JDK 5 or Higher</term>

            <listitem>
              <para>A working installation of the Java Development Kit
              (<acronym>JDK</acronym>) version 5 or higher is required in
              order to run the <application>Mobicents SIP Presence
              Service</application>. Note that the <application>JBoss
              Application Server</application> is a runtime dependency of the
              <application>SIP Presence Service</application> and, as
              mentioned, comes bundled with the main binary
              distribution.</para>

              <!-- <para>For instructions on how to install the JDK, refer to <xref linkend="itsps-Installing_the_Java_Development_Kit"/>.</para> -->
            </listitem>
          </varlistentry>
        </variablelist>
      </section>

      <section id="itsps-binary-SIP_Presence_Service-Downloading">
        <title>Downloading</title>

        <para>You can download the latest version of the <application>SIP
        Presence Service</application> distribution you need from the
        Mobicents <literal>Downloads</literal> page at <ulink
        url="http://sourceforge.net/project/showfiles.php?group_id=102670"></ulink>.
        Click on the <literal>Mobicents SIP Presence Service</literal> link to
        view all available distributions and downloads. The latest releases
        are nearer the top.</para>

        <para>If you are unsure which distribution zip file to download, refer
        to <xref
        linkend="itsps-Description_of_the_Different_SIP_Presence_Service_Distributions" />,
        and then to the following list of release binaries.</para>

        <variablelist id="itsps-SIP_Presence_Service_Binary_Distribution_Zip_Files">
          <title>SIP Presence Service Binary Distribution Zip Files</title>

          <varlistentry>
            <term>&SPS_INT_ZIP;</term>

            <listitem>
              <para>Download this zip file to obtain the integrated
              <application>SIP Presence Service</application> binary
              distribution, which includes the <application>SIP Presence
              Server</application>, the <application>XDM Server</application>,
              and the <application>JBoss Application Server</application> as
              well as all required resource adapters.</para>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>&SPS_XDMS_ZIP;</term>

            <listitem>
              <para>Download this zip file to obtain the <application>XML
              Document Management Server</application> binary distribution,
              which bundles the <application>JBoss Application
              Server</application> and the <application>Mobicents JAIN SLEE
              Server</application>.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>

      <section id="itsps-binary-SIP_Presence_Service-Installing">
        <title>Installing</title>

        <para>Once the requirements and prerequisites have been met, and you
        have downloaded the correct zip file for the binary distribution you
        need, you are ready to install the <application>SIP Presence
        Service</application> (or <application>XDM Server</application>).
        Follow the instructions below for your platform, whether Linux or
        Windows.</para>

        <note id="itsps-section-SIP_Presence_Service-Use_Version_Numbers_Relevant_to_Your_Installation">
          <title>Use Version Numbers Relevant to Your Installation!</title>

          <para>For clarity, the command line instructions presented in this
          chapter use specific version numbers and directory names. Remember
          to replace them with version numbers and file names relevant to
          those you are actually working with.</para>
        </note>

        <procedure>
          <title>Installing the SIP Presence Service Binary Distribution on
          Linux</title>

          <step>
            <para>Assuming that you downloaded the binary distribution zip
            file to your home folder, create a subdirectory to unzip the files
            to. It is good practice to include the version number in this
            directory name; if you do so, remember to correctly match it with
            the version of the binary distribution you downloaded.</para>

            <bridgehead>Integrated <application>SIP Presence
            Service</application>:</bridgehead>

            <!--  ~]$ mkdir "sps-<replaceable><version></replaceable>"  -->

            <screen condition="mob">~]$ mkdir "sps-&lt;version&gt;"
</screen>

            <bridgehead><application>XDM Server</application>:</bridgehead>

            <!--  ~]$ mkdir "xdms-<replaceable><version></replaceable>"  -->

            <screen condition="mob">~]$ mkdir "xdms-&lt;version&gt;"
</screen>
          </step>

          <step>
            <para>Move the downloaded zip file into the directory you just
            created:</para>

            <bridgehead>Integrated <application>SIP Presence
            Service</application>:</bridgehead>

            <!--  ~]$ mv "&SPS_INT_ZIP;" "sps-<replaceable><version></replaceable>"  -->

            <screen condition="mob">~]$ mv "&SPS_INT_ZIP;" "sps-&lt;version&gt;"
</screen>

            <bridgehead><application>XDM Server</application>:</bridgehead>

            <!--  ~]$ mv "&SPS_XDMS_ZIP;" "xdms-<replaceable><version></replaceable>"  -->

            <screen condition="mob">~]$ mv "&SPS_XDMS_ZIP;" "xdms-&lt;version&gt;"
</screen>
          </step>

          <step>
            <para>Move into the directory:</para>

            <!--  ~]$ cd "sps-<replaceable><version></replaceable>"  -->

            <screen condition="mob">~]$ cd "sps-&lt;version&gt;"
</screen>

            <para>Or...</para>

            <!--  ~]$ cd "xdms-<replaceable><version></replaceable>"  -->

            <screen condition="mob">~]$ cd "xdms-&lt;version&gt;"
</screen>
          </step>

          <step>
            <para>Finally, use Java's <command>jar
            <option>-xvf</option></command> command to extract the contents of
            the zip file into the current directory, thus completing the
            install:</para>

            <bridgehead>Integrated <application>SIP Presence
            Service</application>:</bridgehead>

            <!--  sps-<replaceable><version></replaceable>]$ jar -xvf "&SPS_INT_ZIP;"  -->

            <screen condition="mob">sps-&lt;version&gt;]$ jar -xvf "&SPS_INT_ZIP;"
</screen>

            <bridgehead><application>XDM Server</application>:</bridgehead>

            <!--  xdms-<replaceable><version></replaceable>]$ jar -xvf "&SPS_XDMS_ZIP;"  -->

            <screen condition="mob">xdms-&lt;version&gt;]$ jar -xvf "&SPS_XDMS_ZIP;"
</screen>

            <!-- <stepalternatives>
						<step>
							<para>Alternatively, if Linux's <command>unzip</command> utility is present on your system or is installable, you can use it in lieu of Java's <command>jar <option>-xvf</option>
									</command> command:</para>
							<screen><![CDATA[sps-integrated-1.0.0]$ unzip "mobicents-sip-presence-integrated-.zip"]]></screen>
							<note>
								<para>You can also use <command>unzip</command>'s <option>-d</option>
									<filename>
								<replaceable>&lt;unzip_to_location&gt;</replaceable>
							</filename> option to extract the zip file's contents to a location other than the current directory.</para>
							</note>
						</step>
					</stepalternatives> -->
          </step>

          <step>
            <para>To free disk space, you may want to delete the zip file once
            you've extracted its contents:</para>

            <!--  sps-<replaceable><version></replaceable>]$ rm "&SPS_INT_ZIP;"  -->

            <screen condition="mob">sps-&lt;version&gt;]$ rm "&SPS_INT_ZIP;"
</screen>

            <!--  xdms-<replaceable><version></replaceable>]$ rm "&SPS_XDMS_ZIP;"  -->

            <screen condition="mob">xdms-&lt;version&gt;]$ rm "&SPS_XDMS_ZIP;"
</screen>
          </step>
        </procedure>

        <procedure>
          <title>Installing the SIP Presence Service Binary Distribution on
          Windows</title>

          <step>
            <para>For this example, we'll assume that you downloaded the
            binary distribution zip file to the <filename>My
            Downloads</filename> folder. First, using Windows Explorer, create
            a subfolder in <filename>My Downloads</filename> to extract the
            zip file's contents into. When you name this folder, it is good
            practice to include the version number; if you do so, remember to
            correctly match it with the version of the <application>SIP
            Presence Service</application> or <application>XDM
            Server</application> binary distribution you downloaded. In these
            instructions, we will refer to this folder as
            <filename>sps-<replaceable>&lt;version&gt;</replaceable></filename>
            or
            <filename>xdms-<replaceable>&lt;version&gt;</replaceable></filename>.</para>
          </step>

          <step>
            <para>Double-click the downloaded zip file, selecting as the
            destination folder the one you just created to hold the zip file's
            contents.</para>

            <stepalternatives>
              <step>
                <para>Alternatively, it is also possible to use Java's
                <command>jar <option>-xvf</option></command> command to
                extract the binary distribution files from the zip archive. To
                use this method instead, first move the downloaded zip file
                from <filename>My Downloads</filename> to the folder that you
                just created to hold the server's files.</para>
              </step>

              <step>
                <para>Then, open the Windows Command Prompt and navigate to
                the folder holding the archive using the <command>cd</command>
                command:</para>

                <note id="itsps-binary-SIP_Presence_Service-Opening_the_Command_Prompt_from_Windows_Explorer">
                  <title>Opening the Command Prompt from Windows
                  Explorer</title>

                  <para>If you are using Windows Vista®, you can open the
                  Command Prompt directly from Explorer. Hold down the
                  <keycap>Shift</keycap> key and right-click on either a
                  folder, the desktop, or inside a folder. This will cause an
                  <guimenuitem>Open Command Window Here</guimenuitem> context
                  menu item to appear, which can be used to open the Command
                  Prompt with the current working directory set to either the
                  folder you opened, or opened it from.</para>
                </note>

                <!-- C:\Users\Me>cd "My Downloads\sps-<replaceable><version></replaceable>"  -->

                <screen condition="mob">C:\Users\Me&gt;cd "My Downloads\sps-&lt;version&gt;"
</screen>

                <para>Or...</para>

                <!--  C:\Users\Me>cd "My Downloads\xdms-<replaceable><version></replaceable>"  -->

                <screen condition="mob">C:\Users\Me&gt;cd "My Downloads\xdms-&lt;version&gt;"
</screen>
              </step>

              <step>
                <para>Finally, use the <command>jar
                <option>-xvf</option></command> command to extract the archive
                contents into the current folder.</para>

                <bridgehead>Integrated <application>SIP Presence
                Service</application>:</bridgehead>

                <!--  C:\Users\Me\My Downloads\sps-<replaceable><version></replaceable>>jar -xvf "&SPS_INT_ZIP;"   -->

                <screen condition="mob">C:\Users\Me\My Downloads\sps-&lt;version&gt;&gt;jar -xvf "&SPS_INT_ZIP;"
</screen>

                <bridgehead><application>XDM
                Server</application>:</bridgehead>

                <!--  C:\Users\Me\My Downloads\xdms-<replaceable><version></replaceable>>jar -xvf "&SPS_XDMS_ZIP;"   -->

                <screen condition="mob">C:\Users\Me\My Downloads\xdms-&lt;version&gt;&gt;jar -xvf "&SPS_XDMS_ZIP;"
</screen>
              </step>
            </stepalternatives>
          </step>

          <step>
            <para>At this point, you may want to move the folder holding the
            <application>SIP Presence Service</application> or
            <application>XDM Server</application> binary files (in this
            example, the folder named
            <filename>sps-<replaceable>&lt;version&gt;</replaceable></filename>
            or
            <filename>xdms-<replaceable>&lt;version&gt;</replaceable></filename>)
            to another location. This step is not strictly necessary, but it
            is probably a good idea to move the server's folder from
            <filename>My Downloads</filename> to a user-defined location for
            storing runnable programs. Any location will suffice,
            however.</para>
          </step>

          <step>
            <para>You may also want to delete the zip file after extracting
            its contents in order to free disk space:</para>

            <!--  C:\Users\Me\My Downloads\sps-<replaceable><version></replaceable>>delete "&SPS_INT_ZIP;"  -->

            <screen condition="mob">C:\Users\Me\My Downloads\sps-&lt;version&gt;&gt;delete "&SPS_INT_ZIP;"
</screen>

            <!--  C:\Users\Me\My Downloads\xdms-<replaceable><version></replaceable>>delete "&SPS_XDMS_ZIP;"   -->

            <screen condition="mob">C:\Users\Me\My Downloads\xdms-&lt;version&gt;&gt;delete "&SPS_XDMS_ZIP;"
</screen>
          </step>
        </procedure>
      </section>

      <section id="itsps-binary-SIP_Presence_Service-Running">
        <title>Running</title>

        <para>Once installed, you can run the <application>SIP Presence
        Service</application> or <application>XDM Server</application> by
        executing the one of the startup scripts in the
        <filename>&lt;install_directory&gt;/&SPS_INT_JBOSS_HOME_BIN_LIN;</filename>
        directory (on Linux or Windows), or by double-clicking the
        <filename>run.bat</filename> executable batch file in that same
        directory (on Windows only). However, we suggest always starting the
        server using the terminal or Command Prompt because you are then able
        to read—and act upon—any startup messages, and possibly debug any
        problems that might arise. In the Linux terminal or Command Prompt,
        you will be able to tell that the server started successfully if the
        last line of output is similar to the following (ending with
        <quote>Started in 23s:648ms</quote>):</para>

        <programlisting>11:23:07,656 INFO  [Server] JBoss (MX MicroKernel) [4.2.3.GA (build: SVNTag=JBoss_4_2_2_GA date=200710221139)] Started in 23s:648ms
</programlisting>

        <para>Detailed instructions are given below, arranged by
        platform.</para>

        <procedure>
          <title>Running the SIP Presence Service on Linux</title>

          <step>
            <para>Change your working directory to the <application>SIP
            Presence Service</application>'s or <application>XDM
            Server</application>'s install directory:</para>

            <!--  ~]$ cd "sps-<replaceable><version></replaceable>"  -->

            <screen condition="mob">~]$ cd "sps-&lt;version&gt;"
</screen>

            <para>Or...</para>

            <!--  ~]$ cd "xdms-<replaceable><version></replaceable>"  -->

            <screen condition="mob">~]$ cd "xdms-&lt;version&gt;"
</screen>
          </step>

          <step performance="optional">
            <para>(Optional) Ensure that the
            <filename>&SPS_INT_JBOSS_HOME_BIN_LIN;run.sh</filename> start
            script is executable:</para>

            <bridgehead>Integrated <application>SIP Presence
            Service</application>:</bridgehead>

            <!--  sps-<replaceable><version></replaceable>]$ chmod +x "&SPS_INT_JBOSS_HOME_BIN_LIN;run.sh"  -->

            <screen condition="mob">sps-&lt;version&gt;]$ chmod +x "&SPS_INT_JBOSS_HOME_BIN_LIN;run.sh"
</screen>

            <bridgehead><application>XDM Server</application>:</bridgehead>

            <!--  xdms-<replaceable><version></replaceable>]$ chmod +x "&SPS_XDMS_JBOSS_HOME_BIN_LIN;run.sh"  -->

            <screen condition="mob">xdms-&lt;version&gt;]$ chmod +x "&SPS_XDMS_JBOSS_HOME_BIN_LIN;run.sh"
</screen>
          </step>

          <step>
            <para>Finally, execute the <filename>run.sh</filename> Bourne
            shell script:</para>

            <bridgehead>Integrated <application>SIP Presence
            Service</application>:</bridgehead>

            <!--  sps-<replaceable><version></replaceable>]$ "./&SPS_INT_JBOSS_HOME_BIN_LIN;run.sh"  -->

            <screen condition="mob">sps-&lt;version&gt;]$ "./&SPS_INT_JBOSS_HOME_BIN_LIN;run.sh"
</screen>

            <bridgehead><application>XDM Server</application>:</bridgehead>

            <!--  xdms-<replaceable><version></replaceable>]$ "./&SPS_XDMS_JBOSS_HOME_BIN_LIN;run.sh"  -->

            <screen condition="mob">xdms-&lt;version&gt;]$ "./&SPS_XDMS_JBOSS_HOME_BIN_LIN;run.sh"
</screen>

            <stepalternatives>
              <step>
                <para>Instead of executing the Bourne shell script to start
                the server, you may alternatively run the
                <filename>run.jar</filename> executable Java archive in the
                <filename>&SPS_INT_JBOSS_HOME_BIN_LIN;</filename>
                directory:</para>

                <bridgehead>Integrated <application>SIP Presence
                Service</application>:</bridgehead>

                <!--  sps-<replaceable><version></replaceable>]$ java -jar "&SPS_INT_JBOSS_HOME_BIN_LIN;run.jar"  -->

                <screen condition="mob">sps-&lt;version&gt;]$ java -jar "&SPS_INT_JBOSS_HOME_BIN_LIN;run.jar"
</screen>

                <bridgehead><application>XDM
                Server</application>:</bridgehead>

                <!--  xdms-<replaceable><version></replaceable>]$ java -jar "&SPS_XDMS_JBOSS_HOME_BIN_LIN;run.jar"  -->

                <screen condition="mob">xdms-&lt;version&gt;]$ java -jar "&SPS_XDMS_JBOSS_HOME_BIN_LIN;run.jar"
</screen>
              </step>
            </stepalternatives>
          </step>
        </procedure>

        <procedure>
          <title>Running the SIP Presence Service on Windows</title>

          <step>
            <para>There are several different ways to start the
            <application>SIP Presence Service</application> or
            <application>XDM Server</application> on Windows. All of the
            following methods accomplish the same task.</para>

            <para>Using Windows Explorer, change your folder to the one in
            which you unzipped the downloaded zip file, and then to the
            <filename>&SPS_INT_JBOSS_HOME_BIN_WIN;</filename>
            subfolder.</para>
          </step>

          <step>
            <para>Although not the preferred way (see below), it is possible
            to start the server by double-clicking on the
            <filename>run.bat</filename> executable batch file.</para>

            <stepalternatives>
              <step>
                <para>As mentioned above, the best way to start the
                <application>SIP Presence Service</application> or
                <application>XDM Server</application>is by using the Command
                Prompt. Doing it this way will allow you to view all of the
                server startup details, which will enable you to easily
                determine whether any problems were encountered during the
                startup process. You can open the Command Prompt directly from
                the
                <filename>&lt;install_directory&gt;\&SPS_INT_JBOSS_HOME_BIN_WIN;</filename>
                folder in Windows Explorer<!-- (see <xref
									linkend="itsps-binary-SIP_Presence_Service-Opening_the_Command_Prompt_from_Windows_Explorer"/> for details) -->,
                or you can open the Command Prompt via the
                <guilabel>Start</guilabel> menu and navigate to the correct
                folder:</para>

                <!--  C:\Users\Me\My Downloads> cd "sps-<replaceable><version></replaceable>"  -->

                <screen condition="mob">C:\Users\Me\My Downloads&gt; cd "sps-&lt;version&gt;"
</screen>

                <para>Or...</para>

                <!--  C:\Users\Me\My Downloads> cd "xdms-<replaceable><version></replaceable>"  -->

                <screen condition="mob">C:\Users\Me\My Downloads&gt; cd "xdms-&lt;version&gt;"
</screen>
              </step>

              <step>
                <para>Start the server by running the executable
                <filename>run.bat</filename> batch file:</para>

                <!--  C:\Users\Me\My Downloads\sps-<replaceable><version></replaceable>>&SPS_INT_JBOSS_HOME_BIN_WIN;run.bat  -->

                <screen condition="mob">C:\Users\Me\My Downloads\sps-&lt;version&gt;&gt;&SPS_INT_JBOSS_HOME_BIN_WIN;run.bat
</screen>

                <!--  C:\Users\Me\My Downloads\xdms-<replaceable><version></replaceable>>&SPS_XDMS_JBOSS_HOME_BIN_WIN;run.bat  -->

                <screen condition="mob">C:\Users\Me\My Downloads\xdms-&lt;version&gt;&gt;&SPS_XDMS_JBOSS_HOME_BIN_WIN;run.bat
</screen>

                <stepalternatives>
                  <step>
                    <para>It is also possible to start the <application>SIP
                    Presence Service</application> (or <application>XDM
                    Server</application>) by running the
                    <filename>run.jar</filename> executable Java
                    archive:</para>

                    <bridgehead>Integrated <application>SIP Presence
                    Service</application>:</bridgehead>

                    <!--  C:\Users\Me\My Downloads\sps-<replaceable><version></replaceable>>java -jar "&SPS_INT_JBOSS_HOME_BIN_WIN;run.jar"  -->

                    <screen condition="mob">C:\Users\Me\My Downloads\sps-&lt;version&gt;&gt;java -jar "&SPS_INT_JBOSS_HOME_BIN_WIN;run.jar"
</screen>

                    <bridgehead><application>XDM
                    Server</application>:</bridgehead>

                    <!--  C:\Users\Me\My Downloads\xdms-<replaceable><version></replaceable>>java -jar "&SPS_XDMS_JBOSS_HOME_BIN_WIN;run.jar"  -->

                    <screen condition="mob">C:\Users\Me\My Downloads\xdms-&lt;version&gt;&gt;java -jar "&SPS_XDMS_JBOSS_HOME_BIN_WIN;run.jar"
</screen>
                  </step>
                </stepalternatives>
              </step>
            </stepalternatives>
          </step>
        </procedure>
      </section>

      <section id="itsps-binary-SIP_Presence_Service-Stopping">
        <title>Stopping</title>

        <para>Detailed instructions for stopping the <application>SIP Presence
        Service</application> and <application>XDM Server</application> are
        given below, arranged by platform. Note that if you properly stop the
        server, you will see the following three lines as the last output in
        the Linux terminal or Command Prompt:</para>

        <programlisting>[Server] Shutdown complete
Shutdown complete
Halting VM
</programlisting>

        <!-- <procedure>
				<title>Stopping the SIP Presence Service on Linux by Issuing a Control Code</title>
				<step>
					<para>Assuming that you started the <application>SIP Presence Service</application> as a foreground process in the terminal, the easiest way to stop it is by pressing the <keycombo
							action="simul"><keycap>Ctrl</keycap>
						<keycap>c</keycap>
					</keycombo> key combination in the same terminal in which you started it.
						</para>
				</step>
			</procedure> -->

        <procedure>
          <title>Stopping the SIP Presence Service on Linux by Executing
          <filename>shutdown.sh</filename> or
          <filename>shutdown.jar</filename></title>

          <step>
            <para>You can shut down the server by executing the
            <filename>shutdown.sh</filename> Bourne shell script in the
            <filename>&lt;install_directory&gt;/&SPS_INT_JBOSS_HOME_BIN_LIN;</filename>
            directory. To do so, first change your working directory to the
            <application>SIP Presence Service</application>'s (or
            <application>XDM Server</application>'s) install directory:</para>

            <!--  ~]$ cd "sps-<replaceable><version></replaceable>"  -->

            <screen condition="mob">~]$ cd "sps-&lt;version&gt;"
</screen>

            <para>Or...</para>

            <!--  ~]$ cd "xdms-<replaceable><version></replaceable>"  -->

            <screen condition="mob">~]$ cd "xdms-&lt;version&gt;"
</screen>
          </step>

          <step performance="optional">
            <para>(Optional) Ensure that the <filename>shutdown.sh</filename>
            start script is executable:</para>

            <bridgehead>Integrated <application>SIP Presence
            Service</application>:</bridgehead>

            <!--  sps-<replaceable><version></replaceable>]$ chmod +x "&SPS_INT_JBOSS_HOME_BIN_LIN;shutdown.sh"  -->

            <screen condition="mob">sps-&lt;version&gt;]$ chmod +x "&SPS_INT_JBOSS_HOME_BIN_LIN;shutdown.sh"
</screen>

            <bridgehead><application>XDM Server</application>:</bridgehead>

            <!--  xdms-<replaceable><version></replaceable>]$ chmod +x "&SPS_XDMS_JBOSS_HOME_BIN_LIN;shutdown.sh"  -->

            <screen condition="mob">xdms-&lt;version&gt;]$ chmod +x "&SPS_XDMS_JBOSS_HOME_BIN_LIN;shutdown.sh"
</screen>
          </step>

          <step>
            <para>Finally, run the <filename>shutdown.sh</filename> executable
            Bourne shell script, and remember to add the <option>-S</option>
            option (which is the short option for <option>--shutdown</option>)
            as a command line argument:</para>

            <bridgehead>Integrated <application>SIP Presence
            Service</application>:</bridgehead>

            <!--  sps-<replaceable><version></replaceable>]$ "./&SPS_INT_JBOSS_HOME_BIN_LIN;shutdown.sh" -S   -->

            <screen condition="mob">sps-&lt;version&gt;]$ "./&SPS_INT_JBOSS_HOME_BIN_LIN;shutdown.sh" -S
</screen>

            <bridgehead><application>XDM Server</application>:</bridgehead>

            <!--  xdms-<replaceable><version></replaceable>]$ "./&SPS_XDMS_JBOSS_HOME_BIN_LIN;shutdown.sh" -S   -->

            <screen condition="mob">xdms-&lt;version&gt;]$ "./&SPS_XDMS_JBOSS_HOME_BIN_LIN;shutdown.sh" -S
</screen>

            <stepalternatives>
              <step>
                <para>Instead of executing the Bourne shell script to stop the
                server, you may alternatively run the
                <filename>shutdown.jar</filename> executable Java archive to
                do so (and remembering, again, to add the <option>-S</option>
                command line argument):</para>

                <bridgehead>Integrated <application>SIP Presence
                Service</application>:</bridgehead>

                <!--  sps-<replaceable><version></replaceable>]$ java -jar "&SPS_INT_JBOSS_HOME_BIN_LIN;shutdown.jar" -S  -->

                <screen condition="mob">sps-&lt;version&gt;]$ java -jar "&SPS_INT_JBOSS_HOME_BIN_LIN;shutdown.jar" -S
</screen>

                <bridgehead><application>XDM
                Server</application>:</bridgehead>

                <!--  xdms-<replaceable><version></replaceable>]$ java -jar "&SPS_XDMS_JBOSS_HOME_BIN_LIN;shutdown.jar" -S  -->

                <screen condition="mob">xdms-&lt;version&gt;]$ java -jar "&SPS_XDMS_JBOSS_HOME_BIN_LIN;shutdown.jar" -S
</screen>
              </step>
            </stepalternatives>
          </step>
        </procedure>

        <procedure>
          <title>Stopping the SIP Presence Service on Windows</title>

          <step>
            <para>Stopping the <application>SIP Presence Service</application>
            (or <application>XDM Server</application>) on Windows consists in
            executing either the <filename>shutdown.bat</filename> or the
            <filename>shutdown.jar</filename> executable file in the
            <filename>&SPS_INT_JBOSS_HOME_BIN_LIN;</filename> subfolder of the
            <application>SIP Presence Service</application>/<application>XDM
            Server</application> binary distribution. Make sure to add the
            <option>-S</option> option (which is the short option for
            <option>--shutdown</option>) as a command line argument.</para>

            <bridgehead>Integrated <application>SIP Presence
            Service</application>:</bridgehead>

            <!-- C:\Users\Me\My Downloads\sps-<replaceable><version></replaceable>>&SPS_INT_JBOSS_HOME_BIN_WIN;shutdown.bat -S -->

            <screen condition="mob">C:\Users\Me\My Downloads\sps-&lt;version&gt;&gt;&SPS_INT_JBOSS_HOME_BIN_WIN;shutdown.bat -S
</screen>

            <bridgehead><application>XDM Server</application>:</bridgehead>

            <!--  C:\Users\Me\My Downloads\xdms-<replaceable><version></replaceable>>&SPS_XDMS_JBOSS_HOME_BIN_WIN;shutdown.bat -S  -->

            <screen condition="mob">C:\Users\Me\My Downloads\xdms-&lt;version&gt;&gt;&SPS_XDMS_JBOSS_HOME_BIN_WIN;shutdown.bat -S
</screen>

            <stepalternatives>
              <step>
                <para>Alternatively, you can execute the
                <filename>shutdown.jar</filename> Java archive by running the
                <command>java <option>-jar</option></command> command, and
                remembering to add the <option>-S</option> option as a command
                line argument:</para>

                <bridgehead>Integrated <application>SIP Presence
                Service</application>:</bridgehead>

                <!--  C:\Users\Me\My Downloads\sps-<replaceable><version></replaceable>>java -jar "&SPS_INT_JBOSS_HOME_BIN_WIN;shutdown.jar" -S   -->

                <screen condition="mob">C:\Users\Me\My Downloads\sps-&lt;version&gt;&gt;java -jar "&SPS_INT_JBOSS_HOME_BIN_WIN;shutdown.jar" -S
</screen>

                <bridgehead><application>XDM
                Server</application>:</bridgehead>

                <!--  C:\Users\Me\My Downloads\sps-<replaceable><version></replaceable>>java -jar "&SPS_XDMS_JBOSS_HOME_BIN_WIN;shutdown.jar" -S  -->

                <screen condition="mob">C:\Users\Me\My Downloads\sps-&lt;version&gt;&gt;java -jar "&SPS_XDMS_JBOSS_HOME_BIN_WIN;shutdown.jar" -S
</screen>
              </step>
            </stepalternatives>
          </step>
        </procedure>
      </section>

      <section id="itsps-binary-SIP_Presence_Service-Configuring">
        <title>Configuring (and Setting JBOSS_HOME)</title>

        <section lang="en-US">
          <title>Setting the JBOSS_HOME Environment Variable</title>

          <para>The <application>Mobicents Platform</application>
          (<application>Mobicents</application>) is built on top of the
          <application>JBoss Application Server</application>
          (<application>JBoss AS</application>). You do not need to set the
          <envar>JBOSS_HOME</envar> environment variable to run any of the
          <application>Mobicents Platform</application> servers
          <emphasis>unless</emphasis> <envar>JBOSS_HOME</envar> is
          <emphasis>already</emphasis> set.</para>

          <para>The best way to know for sure whether
          <envar>JBOSS_HOME</envar> was set previously or not is to perform a
          simple check which may save you time and frustration.</para>

          <formalpara>
            <title>Checking to See If JBOSS_HOME is Set on Linux</title>

            <para>At the command line,
            <command>echo</command><userinput>$JBOSS_HOME</userinput> to see
            if it is currently defined in your environment:</para>
          </formalpara>

          <!--   ~]$ echo $JBOSS_HOME   -->

          <screen>~]$ echo $JBOSS_HOME
</screen>

          <para>The <application>Mobicents Platform</application> and most
          Mobicents servers are built on top of the <application>JBoss
          Application Server</application> (<application>JBoss
          AS</application>). When the <application>Mobicents
          Platform</application> or Mobicents servers are built <emphasis>from
          source</emphasis>, then <envar>JBOSS_HOME</envar>
          <emphasis>must</emphasis> be set, because the Mobicents files are
          installed into (or <quote>over top of</quote> if you prefer) a clean
          <application>JBoss AS</application> installation, and the build
          process assumes that the location pointed to by the
          <envar>JBOSS_HOME</envar> environment variable at the time of
          building is the <application>JBoss AS</application> installation
          into which you want it to install the Mobicents files.</para>

          <para>This guide does not detail building the <application>Mobicents
          Platform</application> or any Mobicents servers from source. It is
          nevertheless useful to understand the role played by
          <application>JBoss AS</application> and <envar>JBOSS_HOME</envar> in
          the Mobicents ecosystem.</para>

          <para>The immediately-following section considers whether you need
          to set <envar>JBOSS_HOME</envar> at all and, if so, when. The
          subsequent sections detail how to set <envar>JBOSS_HOME</envar> on
          Linux and Windows</para>

          <important>
            <para>Even if you fall into the category below of <emphasis>not
            needing</emphasis> to set <envar>JBOSS_HOME</envar>, you may want
            to for various reasons anyway. Also, even if you are instructed
            that you do <emphasis>not need</emphasis> to set
            <envar>JBOSS_HOME</envar>, it is good practice nonetheless to
            check and make sure that <envar>JBOSS_HOME</envar> actually
            <emphasis>isn't</emphasis> set or defined on your system for some
            reason. This can save you both time and frustration.</para>
          </important>

          <bridgehead>You <emphasis>DO NOT NEED</emphasis> to set
          <envar>JBOSS_HOME</envar> if...</bridgehead>

          <itemizedlist>
            <listitem>
              <para>...you have installed the <application>Mobicents
              Platform</application> binary distribution.</para>
            </listitem>

            <listitem>
              <para>...you have installed a Mobicents server binary
              distribution <emphasis>which bundles <application>JBoss
              AS</application>.</emphasis></para>
            </listitem>
          </itemizedlist>

          <bridgehead>You <emphasis>MUST</emphasis> set
          <envar>JBOSS_HOME</envar> if...</bridgehead>

          <itemizedlist>
            <listitem>
              <para>...you are installing the <application>Mobicents
              Platform</application> or any of the Mobicents servers
              <emphasis>from source</emphasis>.</para>
            </listitem>

            <listitem>
              <para>...you are installing the <application>Mobicents
              Platform</application> binary distribution, or one of the
              Mobicents server binary distributions, which <emphasis>do
              not</emphasis> bundle <application>JBoss
              AS</application>.</para>
            </listitem>
          </itemizedlist>

          <para>Naturally, if you installed the <application>Mobicents
          Platform</application> or one of the Mobicents server binary
          releases which <emphasis>do not</emphasis> bundle <application>JBoss
          AS</application>, yet requires it to run, then you should <ulink
          url="http://www.jboss.org/file-access/default/members/jbossas/freezone/docs/Installation_Guide/4/html/index.html">install
          <application>JBoss AS</application></ulink> before setting
          <envar>JBOSS_HOME</envar> or proceeding with anything else.</para>

          <formalpara>
            <title>Setting the JBOSS_HOME Environment Variable on
            Linux</title>

            <para>The <envar>JBOSS_HOME</envar> environment variable must
            point to the directory which contains all of the files for the
            <phrase><application>Mobicents Platform</application> or
            individual Mobicents server</phrase> that you installed. As
            another hint, this topmost directory contains a
            <filename>bin</filename> subdirectory.</para>
          </formalpara>

          <para>Setting <envar>JBOSS_HOME</envar> in your personal
          <filename>~/.bashrc</filename> startup script carries the advantage
          of retaining effect over reboots. Each time you log in, the
          environment variable is sure to be set for you, as a user. On Linux,
          it is possible to set <envar>JBOSS_HOME</envar> as a system-wide
          environment variable, by defining it in
          <filename>/etc/bashrc</filename>, but this method is neither
          recommended nor detailed in these instructions.</para>

          <procedure>
            <title>To Set JBOSS_HOME on Linux...</title>

            <step>
              <para>Open the <filename>~/.bashrc</filename> startup script,
              which is a hidden file in your home directory, in a text editor,
              and insert the following line on its own line while substituting
              for the actual install location on your system:</para>

              <!--   export JBOSS_HOME="/home/<replaceable>&lt;username&gt;</replaceable>/<replaceable>&lt;path&gt;</replaceable>/<replaceable>&lt;to&gt;</replaceable>/<replaceable>&lt;install_directory&gt;</replaceable>"   -->

              <screen>export JBOSS_HOME="/home/&lt;username&gt;/&lt;path&gt;/&lt;to&gt;/&lt;install_directory&gt;"
</screen>
            </step>

            <step>
              <para>Save and close the <filename>.bashrc</filename> startup
              script.</para>
            </step>

            <step>
              <para>You should <command>source</command> the
              <filename>.bashrc</filename> script to force your change to take
              effect, so that <envar>JBOSS_HOME</envar> becomes set for the
              current session<footnote>
                  <para>Note that any other terminals which were opened prior
                  to your having altered <filename>.bashrc</filename> will
                  need to
                  <command>source</command><filename>~/.bashrc</filename> as
                  well should they require access to
                  <envar>JBOSS_HOME</envar>.</para>
                </footnote>.</para>

              <!--   ~]$ source ~/.bashrc   -->

              <screen>~]$ source ~/.bashrc
</screen>
            </step>

            <step>
              <para>Finally, ensure that <envar>JBOSS_HOME</envar> is set in
              the current session, and actually points to the correct
              location:</para>

              <note>
                <para>The command line usage below is based upon a binary
                installation of the <application>Mobicents
                Platform</application>. In this sample output,
                <envar>JBOSS_HOME</envar> has been set correctly to the
                <replaceable>topmost_directory</replaceable> of the
                <application>Mobicents</application> installation. Note that
                if you are installing one of the standalone
                <application>Mobicents</application> servers (with
                <application>JBoss AS</application> bundled!), then
                <envar>JBOSS_HOME</envar> would point to the
                <replaceable>topmost_directory</replaceable> of your server
                installation.</para>
              </note>

              <!--   ~]$ echo $JBOSS_HOME
/home/silas/&MOB_JBOSS_HOME_LIN;   -->

              <screen>~]$ echo $JBOSS_HOME
/home/silas/&MOB_JBOSS_HOME_LIN;
</screen>
            </step>
          </procedure>

          <formalpara>
            <title>Setting the JBOSS_HOME Environment Variable on
            Windows</title>

            <para>The <envar>JBOSS_HOME</envar> environment variable must
            point to the directory which contains all of the files for the
            <phrase>Mobicents Platform or individual Mobicents server</phrase>
            that you installed. As another hint, this topmost directory
            contains a <filename>bin</filename> subdirectory.</para>
          </formalpara>

          <para>For information on how to set environment variables in recent
          versions of Windows, refer to <ulink
          url="http://support.microsoft.com/kb/931715"></ulink>.</para>
        </section>
      </section>

      <section id="itsps-binary-SIP_Presence_Service-Testing">
        <title>Testing</title>

        <para> </para>
      </section>

      <section id="itsps-binary-SIP_Presence_Service-Uninstalling">
        <title>Uninstalling</title>

        <para>To uninstall the <application>SIP Presence Service</application>
        or <application>XDM Server</application>, simply delete the directory
        you decompressed the binary distribution archive into.</para>
      </section>
    </section>
  </chapter>

  <chapter id="sps-SIP_Presence_Server" lang="en-US">
    <!--  chapter id nickname: sps  -->

    <title>Mobicents SIP Presence Server</title>

    <para>The <application>Mobicents SIP Presence Server</application> is a
    free and open source implementation of a SIP Presence Server, as defined
    by the Internet Engineering Task Force (IETF), the Open Mobile Alliance
    (OMA), the 3rd Generation Partnership Project (3GPP) and the European
    Telecommunications Standards Institute (ETSI).</para>

    <para>The <application>SIP Presence Server</application> is an entity that
    accepts, stores and distributes SIP presence information.</para>

    <section id="sps-Functional_Architecture_of_the_SIP_Presence_Server">
      <title>Functional Architecture of the SIP Presence Server</title>

      <mediaobject id="sps-SIPPresenceServer-dia-PSFunctionalArchitecture">
        <imageobject>
          <imagedata align="center"
                     fileref="images/sps-SIPPresenceServer-dia-PSFunctionalArchitecture.jpg"
                     format="JPG" scalefit="1" width="553" />
        </imageobject>

        <caption><para> Functional Diagram of the Mobicents SIP Presence
        Server </para></caption>
      </mediaobject>

      <para>The <application>SIP Presence Server</application> is comprised of
      the following functional elements:</para>

      <variablelist id="sps-Functional_Elements_of_the_SIP_Presence_Server">
        <varlistentry>
          <term>Presence Publication Control</term>

          <listitem>
            <para>This functional element manages the publication of presence
            events, which includes not only the handling of new publications,
            but also the refreshing, modification or removal of,
            already-published information.</para>

            <para>Because the presence resource, which is also called a
            <emphasis>presentity</emphasis>, can have multiple publications
            simultaneously, such as some state published by a user agent or
            device, and some location data published by a Presence Network
            Agent (on behalf of the presentity), this element is also
            responsible for composing all of the different publications for
            the same resource.</para>

            <para>In some presence networks, it may be of interest to allow
            resources to have a static presence state which is stored in the
            XDM Server. In cases like these, Presence Publication Control may
            need to interface with the <application>XDM Server</application>
            to retrieve and subscribe to (learn about changes to) that
            information, and use it when composing the final presence
            information document.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Presence Subscription Control</term>

          <listitem>
            <para>This functional element handles subscriptions to presence
            events or to the list of subscribers (watchers), for any specific
            resource. It is, of course, responsible for emitting notifications
            related to those subscriptions.</para>

            <para>Presence authorization rules, which define if a subscription
            is allowed or rejected and, if allowed, define which
            transformations to the original presence events are needed, are
            stored on the <application>XDM Server</application> by the user.
            Thus, Presence Subscription Control needs to retrieve and
            subscribe to that information.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>XDM Client Control</term>

          <listitem>
            <para>This last element is responsible for interfacing with the
            <application>XDM Server</application> that manages the user's XML
            documents, and is related to the main functions of the presence
            server. It is capable not only of retrieving a document or part of
            one, but also of subscribing to either updates of a single,
            specific document, or to a full collection of documents of a
            specific type or application.</para>
          </listitem>
        </varlistentry>
      </variablelist>

      <section id="sps-Implementation_Architecture_of_the_Mobicents_SIP_Presence_Server">
        <title>Implementation Architecture of the Mobicents SIP Presence
        Server</title>

        <mediaobject id="sps-SIPPresenceServer-dia-PSImplementation">
          <imageobject>
            <imagedata align="center"
                       fileref="images/sps-SIPPresenceServer-dia-PSImplementation.jpg"
                       format="JPG" scalefit="1" width="550" />
          </imageobject>

          <caption><para> Implementation Architecture of the Mobicents SIP
          Presence Server </para></caption>
        </mediaobject>

        <para>The implementation of the Mobicents SIP Presence Server
        comprises the following functional elements:</para>

        <variablelist id="sps-The_Two_Services_Which_Compose_the_Presence_Server">
          <title>The Two Services Which Compose the SIP Presence
          Server</title>

          <varlistentry>
            <term>Presence Publication Control Service</term>

            <listitem>
              <para>This JAIN SLEE service includes the root Service Building
              Block (SBB), <literal>PresencePublicationControlSbb</literal>,
              which is the implementation of the abstract SIP event
              <literal>PublicationControlSbb</literal>. It handles
              publications on the <application>presence</application> event
              package.</para>

              <para>The <literal>PresencePublicationControlSbb</literal>
              provides the following capabilities:</para>

              <itemizedlist>
                <listitem>
                  <para>It provides the logic to authorize a publication;
                  however, it only authorizes <literal>PUBLISH</literal>
                  requests when the request URI matches the PIDF document
                  <quote>entity</quote> attribute.</para>
                </listitem>

                <listitem>
                  <para>It provides JAXB unmarshellers to validate and parse
                  the PIDF document for the abstract
                  <literal>PublicationControlSbb</literal>.</para>
                </listitem>

                <listitem>
                  <para>It demands that notifying subscribers occur through a
                  child relation to the root SBB of the Presence Subscription
                  Control Service.</para>
                </listitem>

                <listitem>
                  <para>Finally, it also provides an
                  <literal>SbbLocalObject</literal> interface that can be
                  used, in JAIN SLEE child relations, to obtain the composed
                  presence information for a specific resource.</para>
                </listitem>
              </itemizedlist>
            </listitem>
          </varlistentry>

          <varlistentry>
            <term>Presence Subscription Control Service.</term>

            <listitem>
              <para>This JAIN SLEE service includes the root SBB
              <literal>PresenceSubscriptionControlSbb</literal>, which is the
              implementation of the abstract SIP Event
              <literal>SubscriptionControlSbb</literal>. It handles
              subscriptions on the <quote>presence</quote> event
              package.</para>

              <para>The standout SBB logic item is the usage of presence-rules
              documents, obtained through the XDM Client SBB child relation,
              in order to authorize subscriptions and transform the content
              notified<footnote>
                  <para>Note that this feature is not yet used.</para>
                </footnote>. It also defines a child relation to the root SBB
              of <literal>PresencePublicationService</literal> to retrieve the
              composed PIDF document for the subscription's notifier.</para>

              <para>The SBB also provides an <literal>SbbLocalObject</literal>
              interface that can be used, in JAIN SLEE child relations, to
              make the presence event known to the subscribers of a specific
              resource.</para>
            </listitem>
          </varlistentry>
        </variablelist>

        <para>The implementation architecture of the SIP Presence Server also
        contains client-side components:</para>

        <variablelist>
          <varlistentry>
            <term>Presence Client SBB</term>

            <listitem>
              <note>
                <title>Not Yet Available</title>

                <para>This SBB is not yet available.</para>
              </note>

              <para>The <literal>PresenceClientSBB</literal> is the interface
              to a JAIN SLEE SBB intended to be used as a client for the
              <application>Mobicents SIP Presence Server</application> (and
              other servers compliant with same standards), in JAIN SLEE child
              relations.</para>

              <para>Two implementations of this interface are provided: the
              <literal>InternalPresenceClientSBB</literal> that is used with
              applications running in the <application>Mobicents SIP Presence
              Server</application> JAIN SLEE container, and the
              <literal>ExternalPresenceClientSBB</literal>, used with
              applications running in a different JAIN SLEE container than the
              <application>Mobicents SIP Presence Server</application>.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
    </section>

    <section id="sps-Resources_and_Further_Information_about_the_SIP_Presence_Server">
      <title>Resources and Further Information about the SIP Presence
      Server</title>

      <para>For further information on the Mobicents SIP Presence Server, see
      the following list of additional resources:</para>

      <itemizedlist id="sps-Further_Information_on_the_SIP_Presence_Server">
        <!-- <listitem>
				<para>How to Manage the Mobicents SIP Presence Server</para>
			</listitem>
			<listitem>
				<para>Integrating the Mobicents SIP Presence Server into Your JAIN SLEE Applications: Code Snippets for Internal Presence Client SBB Usage.</para>
			</listitem>
			<listitem>
				<para>Integrating the Mobicents SIP Presence Server into Your JAIN SLEE Applications: Code Snippets for External Presence Client SBB Usage.</para>
			</listitem> -->

        <listitem>
          <para><ulink
          url="http://groups.google.com/group/mobicents-public/web/mobicents-sip-event-components">Mobicents
          SIP Event Publication and Subscription Control
          Components</ulink></para>
        </listitem>
      </itemizedlist>
    </section>
  </chapter>

  <chapter id="xdms-XML_Document_Management_Server" lang="en-US">
    <!--  chapter id nickname: xdms  -->

    <title>Mobicents XML Document Management Server</title>

    <para>The <application>Mobicents XML Document Management
    Server</application> (<application>XDM Server</application>) is part of
    the <application>Mobicents SIP Presence Service</application>; it is the
    first free and open source implementation of an <application>XML Document
    Management Server</application> as defined in the <ulink
    url="Open Mobile Alliance (OMA) XML Document Management v1.1 specification"></ulink>.
    This functional element of next-generation IP communication networks is
    responsible for handling the management of user XML documents stored on
    the network side, such as presence authorization rules, contact and group
    lists (also known as resource lists), static presence information, and
    much more.</para>

    <section id="xdms-Functional_Architecture_of_the_XDM_Server">
      <title>Functional Architecture of the XDM Server</title>

      <para>The <application>Mobicents XDM Server</application> includes the
      following XCAP application usages:</para>

      <itemizedlist>
        <listitem>
          <para><ulink url="http://tools.ietf.org/html/rfc5025">IETF Presence
          Rules (RFC 5025)</ulink></para>
        </listitem>

        <listitem>
          <para><ulink
          url="http://www.openmobilealliance.org/Technical/release_program/Presence_simple_v1_1.aspx">OMA
          Presence Rules (OMA Presence Simple v1.1 Candidate
          Release)</ulink></para>
        </listitem>

        <listitem>
          <para><ulink url="http://tools.ietf.org/html/rfc4826">IETF Resource
          Lists</ulink></para>
        </listitem>

        <listitem>
          <para><ulink url="http://tools.ietf.org/html/rfc4826">IETF RLS
          Services (RFC 4826)</ulink></para>
        </listitem>

        <listitem>
          <para><ulink url="http://tools.ietf.org/html/rfc4825">IETF XCAP-CAPS
          (RFC 4825)</ulink></para>
        </listitem>
      </itemizedlist>

      <para>The SIP interface partially implements the XCAP Diff Event IETF
      draft, version 3. Subscriptions to a single document or usage by an
      entire application are supported. However, these differing usages do not
      extend to the single-XML element or attribute value level. Regarding the
      notifications, the diff-processing subscription parameter, if present,
      is ignored, and patching of content is not available at the moment,
      which means that only the document etags, new and/or old, will be
      provided.</para>

      <para>View the <ulink
      url="http://mobicents-public.googlegroups.com/web/XDM+Functional+Architecture.jpg?gda=vowVslEAAAAF_VX0TG5xx-FBSRUj3rSw3W3MetT0jWUh4Xj3nCKKkJRg1dOenZYHeKjWSh6kKUoVQKX_J3c2taUlhicc8as8Uwk_6Qi3BU8HCN0q6OYwM5VxXgp_nHWJXhfr7YhqVgA">XML
      Document Management Server Architecture</ulink></para>

      <!-- <mediaobject
			id="xdms-sps-XDMS-dia-XDMFunctionalArchitecture">
			<imageobject>
				<imagedata
					align="center"
					width="700"
					fileref="images/sps-XDMS-dia-XDMFunctionalArchitecture.jpg"
					format="JPG" />
			</imageobject>
			<caption>
				<para>The Mobicents XML Document Management Server</para>
			</caption>
		</mediaobject> -->

      <para>The <application>XDM Server</application> comprises the following
      functional elements:</para>

      <variablelist id="xdms-Functional_Elements_of_the_XDM_Server">
        <title>Functional Elements of the XDM Server</title>

        <varlistentry>
          <term>Data Source</term>

          <listitem>
            <para>The <application>XDM Server</application> data source is
            where all user XML documents are stored. Information related to
            the server itself is also stored in this element along with the
            user's provisioned data</para>

            <para>The data source also handles subscriptions to updates on
            specific documents, or complete XCAP application usages.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Aggregation Proxy</term>

          <listitem>
            <para>The aggregation proxy is responsible for handling an XDM
            client's XCAP requests, which includes authentication and
            authorization of the requester.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Request Processor</term>

          <listitem>
            <para>This element includes the XCAP Server logic to process an
            XCAP request and return a proper response.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>XDM Event Subscription Control</term>

          <listitem>
            <para>This element, using the SIP protocol, is responsible for
            handling subscriptions to documents managed by the XDM. Its
            functions include the authentication and authorization of a
            subscription, attachment to update events on specific documents or
            application usages, and the sending of notifications when
            documents change.</para>
          </listitem>
        </varlistentry>
      </variablelist>

      <formalpara>
        <title>Implementation Architecture of the Mobicents XML Document
        Management Server</title>

        <para>The <application>XDM Server</application> is built on top of the
        <application>Mobicents JAIN SLEE</application> container. This figure
        depicts the architecture of the <application>XDM Server</application>
        implementation.</para>
      </formalpara>

      <para>View the diagram of the <ulink
      url="http://mobicents-public.googlegroups.com/web/XDMS+Implementation.jpg?gda=9hCf4kkAAAAF_VX0TG5xx-FBSRUj3rSw3W3MetT0jWUh4Xj3nCKKkJQ0jPtcnRwbFIKXxiisEZifs7maW8FM3kQMOUV88KaGhAioEG5q2hncZWbpWmJ7IQ">XDM
      Server Implementation</ulink>.</para>

      <!-- <mediaobject
			id="xdms-sps-XDMS-dia-XDMSImplementation">
			<imageobject>
				<imagedata
					align="center"
					width="700"
					fileref="images/sps-XDMS-dia-XDMSImplementation.jpg"
					format="JPG" />
			</imageobject>
			<caption>
				<para>Mobicents XML Document Management Server</para>
			</caption>
		</mediaobject> -->

      <variablelist id="xdms-The_Functional_Elements_Which_Compose_the_XML_Document_Management_Server">
        <title>The Functional Elements of the XML Document Management
        Server</title>

        <varlistentry>
          <term>Data Source Resource Adapter</term>

          <listitem>
            <para>This resource adapter implements the Data Source functional
            element.</para>

            <para>The <literal>RA Type</literal> defines two activities
            objects, <literal>DocumentActivity</literal> and
            <literal>AppUsageActivity</literal>, both of which are used to
            fire events that signal that a document, element or attribute was
            updated.</para>

            <para>The <literal>RA Type</literal> also defines a Service
            Building Block (<acronym>SBB</acronym>) RA interface to manage the
            users and documents stored in the XDM Server, and create
            activities, where events will be fired. The resource adapter will
            only fire events on activities that exist; that is, the RA won't
            create activities implicitly if a document is updated.</para>

            <para>The <literal>RA Type</literal> also provides a base abstract
            implementation of the resource adapter, making it very simple to
            change the underlying resource used to store information, which is
            by default the internal JDBC datasource of the <application>JBoss
            Application Server</application>.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>AppUsage Cache Resource Adaptor</term>

          <listitem>
            <para>This resource adapter stores the XCAP application usages
            installed in the server.</para>

            <para>Each <literal>AppUsage</literal> is an object that includes
            the logic to validate XCAP documents that result from XCAP
            requests and are expensive to create; this resource adapter thus
            provides caching of AppUsages, using a pool model.</para>

            <para>The resource adapter doesn't possess events or
            activities.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>AppUsage Service</term>

          <listitem>
            <para>XCAP Application Usages are installed through a JAIN SLEE
            service, making it possible to add and/or remove application
            usages while the server is running.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Aggregation Proxy Service</term>

          <listitem>
            <para>This JAIN SLEE service implements the aggregation proxy
            functional element. It handles events fired by the Mobicents HTTP
            Servlet resource adapter and then uses two child SBBs: the
            <literal>User Profile Enabler SBB</literal> to retrieve
            information regarding the user needed for
            authentication/authorization of the XCAP request, and the
            <literal>Request Processor SBB</literal>, which handles the XCAP
            request.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Request Processor SBB</term>

          <listitem>
            <para>The <literal>Request Processor SBB</literal> implements the
            request processor functional element, providing a synchronous SBB
            interface to process XCAP requests. It uses the <literal>AppUsage
            Cache</literal> resource adapter to borrow AppUsage objects, and
            the Data Source resource adapter to retrieve or set documents
            stored in the server's data source.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>User Profile Enabler SBB (TBD: not available yet)</term>

          <listitem>
            <para>This SBB provides a synchronous SBB interface used in JAIN
            SLEE child relations in order to retrieve user information. Two
            different implementations of the interface are provided: the first
            considers whether the information is stored in the XDM Data
            Source, another interfaces with a Diameter Sh Server, such as
            <application>IMS HSS</application>.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>XCAP Diff Subscription Control Service</term>

          <listitem>
            <para>This JAIN SLEE Service extends the abstract SIP Event
            Subscription Control component to handle SIP subscriptions on the
            xcap-diff event package.</para>
          </listitem>
        </varlistentry>
      </variablelist>

      <para>The implementation architecture figure also contains client-side
      components:</para>

      <variablelist id="xdms-Client-Side_Components_of_the_XML_Document_Management_Server_">
        <title>Client-Side Components of the XML Document Management
        Server</title>

        <varlistentry>
          <term>XCAP Client</term>

          <listitem>
            <para>The XCAP client is a simple API to interact with an XCAP
            Server that internally uses the Apache HTTP Client.</para>

            <!-- <para>The API documentation and example code snippets can be found TBD</para> -->

            <para> </para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>XCAP Client Resource Adaptor</term>

          <listitem>
            <para>The XCAP Client Resource Adapter adapts the XCAP Client API
            into the JAIN SLEE domain. It provides methods to interact with
            the XCAP server in both synchronous and asynchronous ways.</para>

            <para>The RA Type description and code snippets using the RA can
            be found here.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>XDM Client SBB</term>

          <listitem>
            <para>The XDMClientSBB is an interface of a JAIN SLEE SBB to be
            used as a client to the <application>Mobicents XDM
            Server</application> (and others compliant with same standards),
            in JAIN SLEE child relations.</para>

            <para>Two implementations of this interface are provided:</para>

            <itemizedlist>
              <listitem>
                <para><literal>InternalXDMClientSBB</literal> is intended to
                be used on applications running in the <application>Mobicents
                XDM Server</application> JAIN SLEE container, and</para>
              </listitem>

              <listitem>
                <para><literal>ExternalXDMClientSBB</literal>, which is
                intended to be used on applications in a different JAIN SLEE
                container than the <application>Mobicents XDM
                Server</application>.</para>
              </listitem>
            </itemizedlist>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section id="xdms-Resources_and_Further_Information_about_the_XDM_Server">
      <title>Resources and Further Information about the XDM Server</title>

      <para>For further information on the Mobicents XDM Server, here is a
      list of additional resources:</para>

      <itemizedlist id="xdms-Further_Information_on_the_XDM_Server">
        <listitem>
          <para><ulink
          url="http://groups.google.com/group/mobicents-public/web/xcap-client-api">XCAP
          Client API Documentation</ulink></para>
        </listitem>

        <listitem>
          <para><ulink
          url="http://groups.google.com/group/mobicents-public/web/xcap-client-resource-adaptor">XCAP
          Client RA Type Description and Example Code Snippets</ulink></para>
        </listitem>
      </itemizedlist>
    </section>
  </chapter>

  <chapter id="rls-Resource_List_Server" lang="en-US">
    <!--  chapter id nickname: rls  -->

    <title>Mobicents Resource List Server</title>

    <para> </para>

    <note>
      <title>Resource List Server</title>

      <para>The <application>Mobicents Resource List Server</application> is
      not yet fully-implemented.</para>
    </note>
  </chapter>

  <appendix id="spsug-appe-Publican-Revision_History" lang="en-US">
    <!--  chapter id nickname: spsug  -->

    <title>Revision History</title>

    <simpara><revhistory>
        <!-- revisions must be listed in chronological order with the latest at the top -->

        <revision>
          <revnumber>2.0</revnumber>

          <date>Fri Mar 06 2009</date>

          <author>
            <firstname>Douglas</firstname>

            <surname>Silas</surname>

            <email>dhensley@redhat.com</email>
          </author>

          <revdescription>
            <simplelist>
              <member>First release of the "parameterized" and much-improved
              JBCP documentation.</member>
            </simplelist>
          </revdescription>
        </revision>

        <revision>
          <revnumber>1.0</revnumber>

          <date>Tue Jan 20 2009</date>

          <author>
            <firstname>Douglas</firstname>

            <surname>Silas</surname>

            <email>dhensley@redhat.com</email>
          </author>

          <revdescription>
            <simplelist>
              <member>Creation of the Mobicents SIP Presence Service User
              Guide separate from the Mobicents User Guide.</member>
            </simplelist>
          </revdescription>
        </revision>
      </revhistory></simpara>
  </appendix>

  <index></index>
</book>
