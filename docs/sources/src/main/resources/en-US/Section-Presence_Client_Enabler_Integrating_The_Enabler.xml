<?xml version='1.0'?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [<!ENTITY % BOOK_ENTITIES SYSTEM "SIP_Presence_Service_User_Guide.ent">
%BOOK_ENTITIES;]>

<section id="msps-presence_client_enabler-integrating">

	<title>Integrating the &PLATFORM_NAME; Presence Client Enabler</title>
	
	<para>This chapter explains how to setup a JAIN SLEE Service Sbb to use the Enabler.</para>

	<para>In short terms, a Service's Sbb will define the Enabler's Sbb as a child, and to achieve that it will need to setup the XML Descriptor, Abstract Class and SbbLocalObject interface.</para>
	
	<important><para>The Service's Sbb will be referred as the Parent Sbb in the following sections.</para></important>
	
	<section id="msps-presence_client_enabler-parent_sbb_local_object_interface">
		
		<title>The Parent's SbbLocalObject Interface</title>
		
		<para>The &PLATFORM_NAME; Presence Client Enabler Sbb provides asynchronous callbacks to the Parent's Sbb, and that can only be achieved if the Parent's SbbLocalObject extends a specific Java interface, deployed also by the Enabler, and provides it's SbbLocalObject to the Enabler's Sbb, through a specific method exposed by the latter interface. The Enabler stores the Parent's SbbLocalObject and uses it when a callback to the Parent's Sbb is needed.</para>
		
		<para>The SbbLocalObject which must be used or extended by the Parent's Sbb is named <literal>org.mobicents.slee.sippresence.client.PresenceClientControlParentSbbLocalObject</literal>, which extends the <literal>javax.slee.SbbLocalObject</literal> and <literal>org.mobicents.slee.sippresence.client.PresenceClientControlParent</literal> interfaces, the latter declares the callbacks which must be implemented in the Parent's Sbb Abstract Class:</para>
		
		<programlisting language="Java" role="JAVA"><![CDATA[
package org.mobicents.slee.sippresence.client;

import org.mobicents.slee.sipevent.server.subscription.data.Subscription;

public interface PresenceClientControlParent {

	public void newPublicationOk(Object requestId, String eTag, int expires);

	public void refreshPublicationOk(Object requestId, String eTag, int expires);

	public void modifyPublicationOk(Object requestId, String eTag, int expires);

	public void removePublicationOk(Object requestId);

	public void newPublicationError(Object requestId, int error);

	public void refreshPublicationError(Object requestId, int error);

	public void modifyPublicationError(Object requestId, int error);

	public void removePublicationError(Object requestId, int error);

	public void newSubscriptionOk(String subscriber, String notifier,
			String eventPackage, String subscriptionId, int expires,
			int responseCode);

	public void refreshSubscriptionOk(String subscriber, String notifier,
			String eventPackage, String subscriptionId, int expires);

	public void removeSubscriptionOk(String subscriber, String notifier,
			String eventPackage, String subscriptionId);

	public void newSubscriptionError(String subscriber, String notifier,
			String eventPackage, String subscriptionId, int error);

	public void refreshSubscriptionError(String subscriber, String notifier,
			String eventPackage, String subscriptionId, int error);


	public void removeSubscriptionError(String subscriber, String notifier,
			String eventPackage, String subscriptionId, int error);

	public void notifyEvent(String subscriber, String notifier,
			String eventPackage, String subscriptionId,
			Subscription.Event terminationReason, Subscription.Status status,
			String content, String contentType, String contentSubtype);

}
		]]>
		</programlisting>
		
		<variablelist>
		
			<varlistentry>
				<term>The <literal>newPublicationOk(Object, String, int)</literal> method:</term>
				<listitem>
					<para>Callback from the Enabler indicating that the new publication request succeed.</para>
				</listitem>
			</varlistentry>

			<varlistentry>
				<term>The <literal>refreshPublicationOk(Object, String, int)</literal> method:</term>
				<listitem>
					<para>Callback from the Enabler indicating that the refresh publication request succeed.</para>
				</listitem>
			</varlistentry>

			<varlistentry>
				<term>The <literal>modifyPublicationOk(Object, String, int)</literal> method:</term>
				<listitem>
					<para>Callback from the Enabler indicating that the modify publication request succeed.</para>
				</listitem>
			</varlistentry>

			<varlistentry>
				<term>The <literal>removePublicationOk(Object)</literal> method:</term>
				<listitem>
					<para>Callback from the Enabler indicating that the remove publication request succeed.</para>
				</listitem>
			</varlistentry>
			
			<varlistentry>
				<term>The <literal>newPublicationError(Object, int)</literal> method:</term>
				<listitem>
					<para>Callback from the Enabler indicating that the new publication request failed.</para>
				</listitem>
			</varlistentry>

			<varlistentry>
				<term>The <literal>refreshPublicationError(Object, int)</literal> method:</term>
				<listitem>
					<para>Callback from the Enabler indicating that the refresh publication request failed.</para>
				</listitem>
			</varlistentry>

			<varlistentry>
				<term>The <literal>modifyPublicationError(Object, int)</literal> method:</term>
				<listitem>
					<para>Callback from the Enabler indicating that the modify publication request failed.</para>
				</listitem>
			</varlistentry>

			<varlistentry>
				<term>The <literal>removePublicationError(Object, int)</literal> method:</term>
				<listitem>
					<para>Callback from the Enabler indicating that the remove publication request failed.</para>
				</listitem>
			</varlistentry>
			
			<!-- subscription -->
			
			<varlistentry>
				<term>The <literal>newSubscriptionOk(String, String, String, String, int, int)</literal> method:</term>
				<listitem>
					<para>Callback from the Enabler indicating that the new subscription request succeed.</para>
				</listitem>
			</varlistentry>

			<varlistentry>
				<term>The <literal>refreshSubscriptionOk(String, String, String, String, int)</literal> method:</term>
				<listitem>
					<para>Callback from the Enabler indicating that the refresh subscription request succeed.</para>
				</listitem>
			</varlistentry>

			<varlistentry>
				<term>The <literal>removeSubscriptionOk(String, String, String, String)</literal> method:</term>
				<listitem>
					<para>Callback from the Enabler indicating that the remove subscription request succeed.</para>
				</listitem>
			</varlistentry>
			
			<varlistentry>
				<term>The <literal>newSubscriptionError(String, String, String, String, int)</literal> method:</term>
				<listitem>
					<para>Callback from the Enabler indicating that the new subscription request failed.</para>
				</listitem>
			</varlistentry>

			<varlistentry>
				<term>The <literal>refreshSubscriptionError(String, String, String, String, int)</literal> method:</term>
				<listitem>
					<para>Callback from the Enabler indicating that the refresh subscription request failed.</para>
				</listitem>
			</varlistentry>

			<varlistentry>
				<term>The <literal>removeSubscriptionError(String, String, String, String, int)</literal> method:</term>
				<listitem>
					<para>Callback from the Enabler indicating that the remove subscription request failed.</para>
				</listitem>
			</varlistentry>
			
			<varlistentry>
				<term>The <literal>notifyEvent(String, String, String, String, Subscription.Event, Subscription.Status, String, String, String)</literal> method:</term>
				<listitem>
					<para>Callback from the Enabler notifying an event related with notifier state change.</para>
				</listitem>
			</varlistentry>
					
		</variablelist>
		
	</section>
	
	<section id="msps-presence_client_enabler-parent_sbb_abstract_class">
		<title>The Parent's Sbb Abstract Class</title>
		<para>The Parent Sbb Abstract Class must implement the callbacks on it's SbbLocalObject, that is, must implement the <literal>org.mobicents.slee.sippresence.client.PresenceClientControlParent</literal> interface discussed in last section.</para>
		<para>The Enabler's Sbb is a Child Sbb, and JAIN SLEE 1.1 Child Relations requires an abstract method in the Sbb Abstract Class, to retrieve the <literal>javax.slee.ChildRelation</literal> object, which is used to create or access specific Child Sbbs. This method should be:</para>
		<programlisting language="Java" role="JAVA"><![CDATA[
	public abstract ChildRelation getPresenceClientChildRelation();
		]]>
		</programlisting>
	</section>
	
	<section id="msps-presence_client_enabler-parent_sbb_xml_descriptor">
		<title>The Parent's Sbb XML Descriptor</title>
		<para>The Parent's Sbb must define a reference to the Enabler's Child Sbb, declare which is the method name to get the related ChildRelation object, and also ensure the SbbLocalObject interface is defined correctly.</para>
		<para>A reference to the Enabler's Child Sbb is defined right after the Parent's Sbb Vendor ID element, using the following XML element:</para>
		<programlisting language="XML" role="XML"><![CDATA[
		<sbb-ref>
			<sbb-name>InternalPresenceClientControlSbb</sbb-name>
		    <sbb-vendor>org.mobicents</sbb-vendor>
        	<sbb-version>1.0</sbb-version>
    		<sbb-alias>presenceClientChildSbb</sbb-alias>
    	</sbb-ref>
		]]>
		</programlisting>
		<para>The method name to get the Enabler's ChildRelation object must be defined after the CMP Fields (if any), this XML element links the sbb-alias previously defined with the abstract method declared in the Parent's Sbb Abstract Class:</para>
		<programlisting language="XML" role="XML"><![CDATA[
		<get-child-relation-method>                	
        	<sbb-alias-ref>presenceClientChildSbb</sbb-alias-ref>
            <get-child-relation-method-name>getPresenceClientChildRelation</get-child-relation-method-name>
            <default-priority>0</default-priority>
        </get-child-relation-method>
		]]>
		</programlisting>
		<para>Finally, after the <literal>sbb-abstract-class</literal> element the Parent's SbbLocalObject interface name is defined:</para>
		<programlisting language="XML" role="XML"><![CDATA[
		<sbb-local-interface>
            <sbb-local-interface-name>...</sbb-local-interface-name>
        </sbb-local-interface>
		]]>
		</programlisting>		
                
	</section>
	
	 
		
</section>

