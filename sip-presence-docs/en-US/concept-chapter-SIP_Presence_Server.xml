<?xml version='1.0'?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
]><!-- chapter id nickname: sps -->
<chapter id="sps-SIP_Presence_Server">
	<title>Mobicents SIP Presence Server</title>
	<para>The <application>Mobicents SIP Presence Server</application> is a free and open source implementation of a SIP Presence Server, as defined by the Internet Engineering Task Force (IETF), the Open Mobile Alliance (OMA), the 3rd Generation Partnership Project (3GPP) and the European Telecommunications Standards Institute (ETSI).</para>
	<para>The <application>SIP Presence Server</application> is an entity that accepts, stores and distributes SIP presence information.</para>
	<section id="sps-Functional_Architecture_of_the_SIP_Presence_Server">
		<title>Functional Architecture of the SIP Presence Server</title>
		<mediaobject id="sps-SIPPresenceServer-dia-PSFunctionalArchitecture">
			<imageobject>
				<imagedata width="450" align="center" fileref="images/sps-SIPPresenceServer-dia-PSFunctionalArchitecture.jpg" format="JPG" />
			</imageobject>
			<caption>
				<para>Functional Diagram of the Mobicents SIP Presence Server</para>
			</caption>
		</mediaobject>
		<para>The <application>SIP Presence Server</application> is comprised of the following functional elements:</para>
		<variablelist id="sps-Functional_Elements_of_the_SIP_Presence_Server">
			<varlistentry>
				<term>Presence Publication Control</term>
				<listitem>
					<para>This functional element manages the publication of presence events, which includes not only the handling of new publications, but also the refreshing, modification or removal of, already-published information.</para>
					<para>Because the presence resource, which is also called a <emphasis>presentity</emphasis>, can have multiple publications simultaneously, such as some state published by a user agent or device, and some location data published by a Presence Network Agent (on behalf of the presentity), this element is also responsible for composing all of the different publications for the same resource.</para>
					<para>In some presence networks, it may be necessary to allow resources to have a static presence state which is stored in the XDM Server.  The Presence Publication Control may need to interface with the <application>XDM Server</application> to retrieve and subscribe to (learn about changes to) that information, and use it when composing the final presence information document.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>Presence Subscription Control</term>
				<listitem>
					<para>This functional element handles subscriptions to presence events, or to the list of subscribers (watchers), for any specific resource.  The Presence Subscription Control is alsoresponsible for emitting notifications related to those subscriptions.</para>
					<para>Presence authorization rules are stored on the <application>XDM Server</application> by the user.  These rules define whether a subscription is allowed or rejected and, if allowed, define which transformations to the original presence events are needed.  The Presence Subscription Control needs to retrieve and subscribe to this information.</para>
				</listitem>
			</varlistentry>
			<varlistentry>
				<term>XDM Client Control</term>
				<listitem>
					<para>This element is responsible for interfacing with the <application>XDM Server</application> that manages the user's XML documents, and is related to the main functions of the presence server.  It is capable of retrieving a partial or full document, and subscribing to either updates of a single, specific document, or to a full collection of documents of a specific type or application.</para>
				</listitem>
			</varlistentry>
		</variablelist>
		
		<section id="sps-Implementation_Architecture_of_the_Mobicents_SIP_Presence_Server">
			<title>Implementation Architecture of the Mobicents SIP Presence Server</title>
			<mediaobject id="sps-SIPPresenceServer-dia-PSImplementation">
				<imageobject>
					<imagedata align="center" width="450" fileref="images/sps-SIPPresenceServer-dia-PSImplementation.jpg" format="JPG" />
				</imageobject>
				<caption>
					<para>Implementation Architecture of the SIP Presence Server</para>
				</caption>
			</mediaobject>
			<para>The implementation of the SIP Presence Server comprises the following functional elements:</para>
			<variablelist id="sps-The_Two_Services_Which_Compose_the_Presence_Server">
				<title>SIP Presence Server Services</title>
				<varlistentry>
					<term>Presence Publication Control</term>
					<listitem>
						<para>This JAIN SLEE service includes the root Service Building Block (SBB), <literal>PresencePublicationControlSbb</literal>, which is the implementation of the abstract SIP event <literal>PublicationControlSbb</literal>.  <literal>PublicationControlSbb</literal> handles publications on the <application>presence</application> event package.</para>
						<para>The <literal>PresencePublicationControlSbb</literal> provides the following capabilities:</para>
						<itemizedlist>
							<listitem>
								<para>Logic to authorize a publication.  <literal>PUBLISH</literal> requests are authorized only when the request URI matches the Presence Information Data Format (PIDF) document <quote>entity</quote> attribute.</para>
							</listitem>
							<listitem>
								<para>Java Architecture for XML Binding (JAXB) unmarshellers that validate and parse the PIDF document for the abstract <literal>PublicationControlSbb</literal>.</para>
							</listitem>
							<listitem>
								<para>Subscriber notification through a child relation to the root SBB of the Presence Subscription Control Service.</para>
							</listitem>
							<listitem>
								<para>Provides an <literal>SbbLocalObject</literal> interface that can be used, in JAIN SLEE child relations, to obtain the composed presence information for a specific resource.</para>
							</listitem>
						</itemizedlist>
					</listitem>
				</varlistentry>
				<varlistentry>
					<term>Presence Subscription Control Service.</term>
					<listitem>
						<para>This JAIN SLEE service includes the root Service Building Block (SBB) <literal>PresenceSubscriptionControlSbb</literal>, which is the implementation of the abstract SIP Event <literal>SubscriptionControlSbb</literal>. It handles subscriptions on the <quote>presence</quote> event package.</para>
						<para>The standout SBB logic item is the usage of presence-rules documents, obtained through the XDM Client SBB child relation, in order to authorize subscriptions and transform the content notified.  It also defines a child relation to the root SBB of <literal>PresencePublicationService</literal> to retrieve the composed PIDF document for the subscription's notifier.</para>
						<para>The SBB also provides an <literal>SbbLocalObject</literal> interface that can be used, in JAIN SLEE child relations, to make the presence event known to the subscribers of a specific resource.</para>
					</listitem>
				</varlistentry>
			</variablelist>
			<!--<para>The implementation architecture of the SIP Presence Server also contains client-side components:</para>
			<variablelist>
				<varlistentry>
					<term>Presence Client SBB</term>
					<listitem>
						<note>
							<title>Not Yet Available</title>
							<para>This SBB is not yet available.</para>
						</note>
						<para>The <literal>PresenceClientSBB</literal> is the interface to a JAIN SLEE SBB intended to be used as a client for the <application>Mobicents SIP Presence Server</application> (and other servers compliant with same standards), in JAIN SLEE child relations.</para>
						<para>Two implementations of this interface are provided: the <literal>InternalPresenceClientSBB</literal> that is used with applications running in the <application>Mobicents SIP Presence Server</application> JAIN SLEE container, and the <literal>ExternalPresenceClientSBB</literal>, used with applications running in a different JAIN SLEE container than the <application>Mobicents SIP Presence Server</application>.</para>
					</listitem>
				</varlistentry>
			</variablelist>-->
		</section>
	</section>
	
	<!--TODO: This section links to a mobicents pages that contains no information.  Work out what information is required here and create the content in this section
	<section id="sps-Resources_and_Further_Information_about_the_SIP_Presence_Server">
		<title>Resources and Further Information about the SIP Presence Server</title>
		<para>For further information on the Mobicents SIP Presence Server, see the following list of additional resources:</para>
		<itemizedlist id="sps-Further_Information_on_the_SIP_Presence_Server">
			<listitem>
				<para>How to Manage the Mobicents SIP Presence Server</para>
			</listitem>
			<listitem>
				<para>Integrating the Mobicents SIP Presence Server into Your JAIN SLEE Applications: Code Snippets for Internal Presence Client SBB Usage.</para>
			</listitem>
			<listitem>
				<para>Integrating the Mobicents SIP Presence Server into Your JAIN SLEE Applications: Code Snippets for External Presence Client SBB Usage.</para>
			</listitem>
			<listitem>
				<para>
					<ulink url="http://groups.google.com/group/mobicents-public/web/mobicents-sip-event-components">Mobicents SIP Event Publication and Subscription Control Components</ulink>
				</para>
			</listitem>
		</itemizedlist>
	</section>-->
</chapter>
